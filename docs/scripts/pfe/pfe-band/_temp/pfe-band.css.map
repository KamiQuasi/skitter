{"version":3,"sources":["../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/extends/_extends.scss","pfe-band.css","pfe-band.scss","../../pfe-sass/functions/_custom-properties.scss","../../pfe-sass/maps/_general.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss","<no source>"],"names":[],"mappings":"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mBAAA;IAAA,wBAAA;ELmUE;ECzBE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELmUE;ECzBE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELmUE;ECzBE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELmUE;AACF;;AC1BI;EACE,mBCxK8B;EDwK9B,0FCxK8B;AFqMpC;;AC3B8B;EAH1B;II1SJ,gBAAA;IAAA,mBAAA;IJ8SU,iBAAa;IAAb,aAAa;IACb,kBC5K0B;ID4K1B,yFC5K0B;ID6K1B,+BC7K0B;ID6K1B,wGC7K0B;ID8K1B,gBAAgB;IAEhB,eAAW;IAEX,qBClL0B;IDkL1B,0BClL0B;IDkL1B,oDClL0B;IDkL1B,yDClL0B;EF+MlC;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;ECxCE;II1SJ,gBAAA;IAAA,mBAAA;ELkVE;AACF;;ACzCI;EACE,mBCxK8B;EDwK9B,0FCxK8B;AFoNpC;;AC1C8B;EAH1B;II1SJ,gBAAA;IAAA,mBAAA;IJ8SU,iBAAa;IAAb,aAAa;IACb,kBC5K0B;ID4K1B,yFC5K0B;ID6K1B,+BC7K0B;ID6K1B,wGC7K0B;ID8K1B,gBAAgB;IAEhB,gBAAW;IAEX,qBClL0B;IDkL1B,0BClL0B;IDkL1B,qDClL0B;IDkL1B,0DClL0B;EF8NlC;ECvDE;II1SJ,gBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,qBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,qBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,qBAAA;IAAA,mBAAA;ELiWE;ECvDE;II1SJ,gBAAA;IAAA,qBAAA;IAAA,mBAAA;ELiWE;AACF;;ACxDI;EACE,mBCxK8B;EDwK9B,0FCxK8B;AFmOpC;;ACzD8B;EAH1B;II1SJ,gBAAA;IAAA,mBAAA;IJ8SU,iBAAa;IAAb,aAAa;IACb,kBC5K0B;ID4K1B,yFC5K0B;ID6K1B,+BC7K0B;ID6K1B,wGC7K0B;ID8K1B,gBAAgB;IAEhB,iBAAW;IAEX,qBClL0B;IDkL1B,0BClL0B;IDkL1B,sDClL0B;IDkL1B,2DClL0B;EF6OlC;ECtEE;II1SJ,gBAAA;IAAA,mBAAA;ELgXE;ECtEE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELgXE;ECtEE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELgXE;ECtEE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELgXE;ECtEE;II1SJ,gBAAA;IAAA,mBAAA;IAAA,wBAAA;ELgXE;AACF;;ACvEI;EAiBA,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;AD0D1B;;AHlXM;EI4GN;IJ5G4F,UAAA;EGuX1F;EChFE;IAsBI,UAAU;IACV,WAAW;ED6DjB;ECpFE;IA0BE,WAAW;IACX,UAAU;IACV,cAAc;ED6DlB;ECzFE;IA+BG,WAAW;ED6DhB;EC3DG;IACE,YAAY;IACZ,cAAc;IACd,WAAW;ED6DhB;AACF","file":"pfe-band.css","sourcesContent":["@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not pfe-broadcasted(#{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    --#{$repo}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context})};\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n    @each $property, $value in $map {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-print-local((\n                BackgroundColor: pfe-var(surface--#{$color}),\n                theme: pfe-var(surface--#{$color}--theme, #{$theme})\n            ));\n            @extend %fallback-surface;\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n    }\n    @if $ie-fallback {\n        :host {\n            @extend %fallback-text;\n        }\n    }\n}\n","%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: #{pfe-var(container-spacer)};\n}\n\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([pfe-color=\"darker\"]), :host([pfe-color=\"darkest\"]), :host([pfe-color=\"base\"]), :host([pfe-color=\"lightest\"]), :host([pfe-color=\"accent\"]), :host([pfe-color=\"complement\"]) {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: #151515 !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    color: #151515 !important;\n  }\n}\n\n:host {\n  --theme: var(--pfe-band--theme, light);\n  display: block;\n  position: relative;\n  padding: calc(var(--pfe-band--Padding--vertical, calc( var(--pfe-theme--container-spacer, 16px) * 4)) / 2) var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1));\n  border: var(--pfe-band--Border, var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent);\n  background-color: var(--pfe-band--BackgroundColor, var(--pfe-theme--color--surface--base, #f0f0f0));\n  background-position: var(--pfe-band--BackgroundPosition, center center);\n  color: var(--pfe-broadcasted--text, #3c3f42);\n}\n\n@media screen and (min-width: 768px) {\n  :host {\n    --pfe-band--Width: calc( 768px - calc(var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1)) * 4));\n  }\n}\n\n@media screen and (min-width: 992px) {\n  :host {\n    --pfe-band--Width: calc( 992px - calc(var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1)) * 4));\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  :host {\n    --pfe-band--Width: calc( 1200px - calc(var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1)) * 4));\n  }\n}\n\n@media (min-width: 576px) {\n  :host {\n    padding: var(--pfe-band--Padding, var(--pfe-band--Padding--vertical, calc( var(--pfe-theme--container-spacer, 16px) * 4)) var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1)));\n  }\n}\n\n@media print {\n  :host {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@media print {\n  :host {\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n    padding: calc( var(--pfe-theme--container-spacer, 16px) * 4)/2 calc( var(--pfe-theme--container-spacer, 16px) * 1);\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: #151515 !important;\n    background-image: none !important;\n    padding: 16px;\n  }\n}\n\n:host *, :host *::before, :host *::after {\n  box-sizing: border-box;\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, #fafafa);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, #fafafa);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #8476d1);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-saturated, underline);\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n}\n\n:host([pfe-color=\"darker\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #3c3f42);\n  --pfe-band--theme: var(--pfe-theme--color--surface--darker--theme, dark);\n}\n\n:host([pfe-color=\"darkest\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-band--theme: var(--pfe-theme--color--surface--darkest--theme, dark);\n}\n\n:host([pfe-color=\"base\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #f0f0f0);\n  --pfe-band--theme: var(--pfe-theme--color--surface--base--theme, light);\n}\n\n:host([pfe-color=\"lightest\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-band--theme: var(--pfe-theme--color--surface--lightest--theme, light);\n}\n\n:host([pfe-color=\"accent\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #004080);\n  --pfe-band--theme: var(--pfe-theme--color--surface--accent--theme, saturated);\n}\n\n:host([pfe-color=\"complement\"]) {\n  --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #002952);\n  --pfe-band--theme: var(--pfe-theme--color--surface--complement--theme, saturated);\n}\n\n:host([pfe-size=\"small\"]) {\n  --pfe-band--Padding: calc(var(--pfe-band--Padding--vertical, calc( var(--pfe-theme--container-spacer, 16px) * 4)) / 4) var(--pfe-band--Padding--horizontal, calc( var(--pfe-theme--container-spacer, 16px) * 1));\n}\n\n.pfe-band__container {\n  --pfe-band__region--width: calc(1fr - var(--pfe-band--Width__aside--sm, 240px) - var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3)));\n  grid-template-areas: \"body\";\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  max-width: var(--pfe-band--Width, auto);\n}\n\n.pfe-band__container[pfe-has-aside] {\n  grid-template-areas: \"body\" \"aside\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-aside] {\n    --pfe-band--layout: 1fr var(--pfe-band--Width__aside--sm, 240px);\n  }\n}\n\n@media (min-width: 992px) {\n  .pfe-band__container[pfe-has-aside] {\n    --pfe-band--layout: 1fr var(--pfe-band--Width__aside--lg, 300px);\n  }\n}\n\n.pfe-band__container[pfe-has-aside][pfe-aside-mobile=\"top\"] {\n  grid-template-areas: \"aside\" \"body\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-aside][pfe-aside-desktop=\"left\"] {\n    grid-template-areas: \"aside body\";\n    --pfe-band--layout: var(--pfe-band--Width__aside--sm, 240px) 1fr;\n  }\n}\n\n@media (min-width: 992px) {\n  .pfe-band__container[pfe-has-aside][pfe-aside-desktop=\"left\"] {\n    --pfe-band--layout: var(--pfe-band--Width__aside--lg, 300px) 1fr;\n  }\n}\n\n.pfe-band__container[pfe-has-header] {\n  grid-template-areas: \"header\" \"body\";\n}\n\n.pfe-band__container[pfe-has-header][pfe-has-aside] {\n  grid-template-areas: \"header\" \"body\" \"aside\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-has-aside] {\n    grid-template-areas: \"header header\" \"body aside\";\n  }\n}\n\n.pfe-band__container[pfe-has-header][pfe-aside-mobile=\"top\"] {\n  grid-template-areas: \"aside\" \"header\" \"body\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"header aside\" \"body aside\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-aside-desktop=\"left\"] {\n    grid-template-areas: \"header header\" \"aside body\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-aside-desktop=\"left\"][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"aside header\" \"aside body\";\n  }\n}\n\n.pfe-band__container[pfe-has-footer] {\n  grid-template-areas: \"body\" \"footer\";\n}\n\n.pfe-band__container[pfe-has-footer][pfe-has-aside] {\n  grid-template-areas: \"body\" \"aside\" \"footer\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-footer][pfe-has-aside] {\n    grid-template-areas: \"body aside\" \"footer footer\";\n  }\n}\n\n.pfe-band__container[pfe-has-footer][pfe-aside-mobile=\"top\"] {\n  grid-template-areas: \"aside\" \"body\" \"footer\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-footer][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"body aside\" \"footer aside\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-footer][pfe-aside-desktop=\"left\"] {\n    grid-template-areas: \"aside body\" \"footer footer\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-footer][pfe-aside-desktop=\"left\"][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"aside body\" \"aside footer\";\n  }\n}\n\n.pfe-band__container[pfe-has-header][pfe-has-footer] {\n  grid-template-areas: \"header\" \"body\" \"footer\";\n}\n\n.pfe-band__container[pfe-has-header][pfe-has-footer][pfe-has-aside] {\n  grid-template-areas: \"header\" \"body\" \"footer\" \"aside\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-has-footer][pfe-has-aside] {\n    grid-template-areas: \"header header\" \"body aside\" \"footer footer\";\n  }\n}\n\n.pfe-band__container[pfe-has-header][pfe-has-footer][pfe-aside-mobile=\"top\"] {\n  grid-template-areas: \"aside\" \"header\" \"body\" \"footer\";\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-has-footer][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"header aside\" \"body aside\" \"footer aside\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-has-footer][pfe-aside-desktop=\"left\"] {\n    grid-template-areas: \"header header\" \"aside body\" \"footer footer\";\n  }\n}\n\n@media (min-width: 768px) {\n  .pfe-band__container[pfe-has-header][pfe-has-footer][pfe-aside-desktop=\"left\"][pfe-aside-height=\"full\"] {\n    grid-template-areas: \"aside header\" \"aside body\" \"aside footer\";\n  }\n}\n\n@supports (display: grid) {\n  .pfe-band__container {\n    display: grid;\n    grid-row-gap: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n    grid-column-gap: var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3));\n    margin-bottom: 0;\n    grid-template-columns: var(--pfe-band--layout, 1fr);\n    grid-template-rows: max-content;\n  }\n}\n\n.pfe-band__header {\n  margin-bottom: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n}\n\n@supports (display: grid) {\n  .pfe-band__header {\n    display: grid;\n    grid-row-gap: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n    grid-column-gap: var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3));\n    margin-bottom: 0;\n    grid-area: header;\n    grid-template-columns: var(--pfe-band__header--layout, 1fr);\n  }\n}\n\n.pfe-band__body {\n  margin-bottom: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n}\n\n@supports (display: grid) {\n  .pfe-band__body {\n    display: grid;\n    grid-row-gap: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n    grid-column-gap: var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3));\n    margin-bottom: 0;\n    grid-area: body;\n    grid-template-columns: var(--pfe-band__body--layout, 1fr);\n  }\n}\n\n.pfe-band__aside {\n  margin-bottom: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n}\n\n@supports (display: grid) {\n  .pfe-band__aside {\n    display: grid;\n    grid-row-gap: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n    grid-column-gap: var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3));\n    margin-bottom: 0;\n    grid-area: aside;\n    grid-template-columns: var(--pfe-band__aside--layout, 1fr);\n  }\n}\n\n.pfe-band__footer {\n  margin-bottom: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n}\n\n@supports (display: grid) {\n  .pfe-band__footer {\n    display: grid;\n    grid-row-gap: var(--pfe-band--gutter--vertical, var(--pfe-theme--container-spacer, 16px));\n    grid-column-gap: var(--pfe-band--gutter--horizontal, calc(var(--pfe-theme--container-spacer, 16px) * 3));\n    margin-bottom: 0;\n    grid-area: footer;\n    grid-template-columns: var(--pfe-band__footer--layout, 1fr);\n  }\n}\n\n.pfe-band__aside {\n  align-self: flex-start;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  .pfe-band {\n    /* IE10+ */\n  }\n  .pfe-band__body {\n    width: 60%;\n    float: left;\n  }\n  .pfe-band__aside {\n    float: left;\n    width: 35%;\n    margin: 0 2.5%;\n  }\n  .pfe-band__footer {\n    clear: both;\n  }\n  .pfe-band__container::after {\n    content: \" \";\n    display: block;\n    clear: both;\n  }\n}\n","@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: band;\n\n\n$LOCAL-VARIABLES: (\n  // Default spacing values\n  Padding--vertical:    calc( #{pfe-var(container-spacer)} * 4),\n  Padding--horizontal:  calc( #{pfe-var(container-spacer)} * 1),\n\n  // Surface colors\n  BackgroundColor:    pfe-var(surface--base),\n  theme: light,\n  BackgroundPosition: center center,\n\n  // Border settings\n  Border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent,\n\n  // Layouts, grid layouts\n  layout: 1fr,\n  \n  header: ( layout: 1fr ),\n  body:   ( layout: 1fr ),\n  footer: ( layout: 1fr ),\n  aside:  ( layout: 1fr ),\n\n  // Vertical spacing\n  gutter--vertical:   pfe-var(container-spacer),\n  gutter--horizontal: calc(#{pfe-var(container-spacer)} * 3),\n\n  // Band width logic\n  // Initialize at mobile breakpoint\n  Width: auto,\n  Width__aside--sm: 240px,\n  Width__aside--lg: 300px,\n);\n\n// Nested internal variables (pfe-local calls), maps cannot \"self-reference\"\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  // Bring them together for ease of use below\n  Padding: pfe-local(Padding--vertical) pfe-local(Padding--horizontal)\n));\n\n:host {\n  // @include pfe-set-broadcast-theme(light);\n  --theme: #{pfe-local(theme)};\n\n  // Loop through the other breakpoints\n  @each $size in (md, lg, xl) {\n    @media screen and (min-width: pfe-breakpoint(#{$size})) {\n      @include pfe-print-local((Width: calc( #{pfe-breakpoint(#{$size})} - calc(#{pfe-local(Padding--horizontal)} * 4) )));\n    }\n  }\n\n  // Wrapper sets padding and background visuals\n  display: block;\n  position: relative;\n\n  // Custom padding on mobile\n  padding: calc(#{pfe-local(Padding--vertical)} / 2)  pfe-local(Padding--horizontal);\n\n  // Variable padding on desktop\n  @media (min-width: #{pfe-breakpoint(sm)}) {\n    padding: pfe-local(Padding);\n  }\n\n  // Border styles\n  border: pfe-local(Border);\n\n  // Base colors\n  background-color:      pfe-local(BackgroundColor);\n  background-position:   pfe-local(BackgroundPosition);\n  color:                 pfe-broadcasted(text);\n\n  // Remove background color for print\n  @include pfe-no-print-background;\n\n  @include pfe-print-media {\n    // Add the border to the card for print\n    border-radius: pfe-fetch(surface--border-radius);\n    border: pfe-fetch(surface--border-width) pfe-fetch(surface--border-style) pfe-fetch(surface--border);\n    // Reduce padding for print\n    padding: (#{pfe-fetch(Padding--vertical)} / 2) pfe-fetch(Padding--horizontal);\n  }\n\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n    background-image: none !important;\n    padding: pfe-fetch(container-spacer);\n  }\n\n  // Tag element styles\n  *, *::before, *::after {\n    box-sizing: border-box;\n  }\n}\n\n// Use-case for transparent backgrounds\n@include pfe-theme-contexts; // imports on=\"light\" etc support\n\n// Pull in pfe-var settings for all supported surface colors\n@include pfe-surfaces;\n\n// thinner padding on top & bottom\n:host([pfe-size=\"small\"]) {\n  @include pfe-print-local((\n    Padding: calc(#{pfe-local(Padding--vertical)} / 4)  #{pfe-local(Padding--horizontal)}\n  ));\n}\n\n.pfe-band {\n  &__container {\n    // Does not need to be wrapped in @supports because it updates variables\n    @include pfe-print-local((\n      region: (\n        width: calc(1fr - #{pfe-local(Width__aside--sm)} - #{pfe-local(gutter--horizontal)})\n      )\n    ));\n    grid-template-areas: \"body\";\n    // Styles for the different combination of regions\n    &[pfe-has-aside] {\n      grid-template-areas:\n        \"body\" \"aside\";\n      @media (min-width: #{pfe-breakpoint(md)}) {\n        @include pfe-print-local((layout: 1fr #{pfe-local(Width__aside--sm)}));\n      }\n      @media (min-width: #{pfe-breakpoint(lg)}) {\n        @include pfe-print-local((layout: 1fr #{pfe-local(Width__aside--lg)}));\n      }\n      &[pfe-aside-mobile=\"top\"] {\n        grid-template-areas:\n          \"aside\" \"body\";\n      }\n      &[pfe-aside-desktop=\"left\"] {\n        @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n              \"aside body\";\n            @include pfe-print-local((layout: #{pfe-local(Width__aside--sm)} 1fr));\n        }\n        @media (min-width: #{pfe-breakpoint(lg)}) {\n          @include pfe-print-local((layout: #{pfe-local(Width__aside--lg)} 1fr));\n        }\n      }\n    }\n    &[pfe-has-header] {\n      grid-template-areas:\n        \"header\" \"body\";\n      &[pfe-has-aside] {\n        grid-template-areas:\n          \"header\"\n          \"body\" \"aside\";\n          @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n              \"header header\"\n              \"body aside\";\n         }\n      }\n      &[pfe-aside-mobile=\"top\"] {\n        grid-template-areas:\n          \"aside\"\n          \"header\"\n          \"body\";\n      }\n      &[pfe-aside-height=\"full\"] {\n          @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n              \"header aside\"\n              \"body aside\";\n          }\n      }\n      &[pfe-aside-desktop=\"left\"] {\n          @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n              \"header header\"\n              \"aside body\";\n          }\n          &[pfe-aside-height=\"full\"] {\n              @media (min-width: #{pfe-breakpoint(md)}) {\n                  grid-template-areas:\n                  \"aside header\"\n                  \"aside body\";\n              }\n            }\n        }\n    }\n    &[pfe-has-footer] {\n      grid-template-areas:\n        \"body\"\n        \"footer\";\n      &[pfe-has-aside] {\n        grid-template-areas:\n          \"body\"\n          \"aside\"\n          \"footer\";\n          @media (min-width: #{pfe-breakpoint(md)}) {\n             grid-template-areas:\n                \"body aside\"\n                \"footer footer\";\n          }\n      }\n      &[pfe-aside-mobile=\"top\"] {\n        grid-template-areas:\n          \"aside\"\n          \"body\"\n          \"footer\";\n      }\n      &[pfe-aside-height=\"full\"] {\n         @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n               \"body aside\"\n               \"footer aside\" ;\n         }\n      }\n      &[pfe-aside-desktop=\"left\"] {\n          @media (min-width: #{pfe-breakpoint(md)}) {\n             grid-template-areas:\n             \"aside body\"\n             \"footer footer\";\n          }\n          &[pfe-aside-height=\"full\"] {\n              @media (min-width: #{pfe-breakpoint(md)}) {\n                 grid-template-areas:\n                 \"aside body\"\n                 \"aside footer\";\n              }\n          }\n      }\n    }\n    &[pfe-has-header][pfe-has-footer] {\n      grid-template-areas:\n        \"header\"\n        \"body\"\n        \"footer\";\n      &[pfe-has-aside] {\n        grid-template-areas:\n          \"header\"\n          \"body\"\n          \"footer\"\n          \"aside\";\n        @media (min-width: #{pfe-breakpoint(md)}) {\n            grid-template-areas:\n            \"header header\"\n            \"body aside\"\n            \"footer footer\";\n        }\n      }\n      &[pfe-aside-mobile=\"top\"] {\n        grid-template-areas:\n          \"aside\"\n          \"header\"\n          \"body\"\n          \"footer\";\n      }\n      &[pfe-aside-height=\"full\"] {\n          @media (min-width: #{pfe-breakpoint(md)}) {\n          grid-template-areas:\n             \"header aside\"\n             \"body aside\"\n             \"footer aside\" ;\n          }\n      }\n      &[pfe-aside-desktop=\"left\"] {\n         @media (min-width: #{pfe-breakpoint(md)}) {\n             grid-template-areas:\n               \"header header\"\n               \"aside body\"\n               \"footer footer\";\n         }\n         &[pfe-aside-height=\"full\"] {\n            @media (min-width: #{pfe-breakpoint(md)}) {\n                grid-template-areas:\n                \"aside header\"\n                \"aside body\"\n                \"aside footer\";\n            }\n         }\n      }\n    }\n\n    position:  relative;\n    margin:    0 auto;\n    width: 100%;\n    max-width: pfe-local(Width);\n\n    // Grid support styles\n    @supports (display: grid) {\n      display: grid;\n      grid-row-gap: pfe-local(gutter--vertical);\n      grid-column-gap: pfe-local(gutter--horizontal);\n      margin-bottom: 0;\n      grid-template-columns: pfe-local(layout);\n      grid-template-rows:    max-content;\n    }\n}\n\n  // For each section in the band layout\n  @each $section in (header, body, aside, footer) {\n    &__#{$section} { // i.e., pfe-band__header\n      margin-bottom: pfe-local(gutter--vertical);\n      // Apply the standard grid\n      @supports (display: grid) {\n          display: grid;\n          grid-row-gap: pfe-local(gutter--vertical);\n          grid-column-gap: pfe-local(gutter--horizontal);\n          margin-bottom: 0;\n          // Apply the section as a named grid-area\n          grid-area: #{$section};\n          // Allow users to hook into the layout with custom columns\n          grid-template-columns: pfe-local(layout, $region: $section);\n      }\n    }\n  }\n\n  &__aside {\n    align-self: flex-start;\n  }\n\n  @include browser-query(ie11) {\n    &__body {\n        width: 60%;\n        float: left;\n    }\n    &__aside {\n      float: left;\n      width: 35%;\n      margin: 0 2.5%;\n    }\n    &__footer {\n       clear: both;\n    }\n     &__container::after {\n       content: \" \";\n       display: block;\n       clear: both;\n     }\n  }\n}\n","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","$pfe-vars: (\n  container-spacer:              16px,\n  container-padding:             16px,\n  content-spacer:                24px,\n\n  font-size:                     16px,\n  line-height:                   1.5,\n\n  font-family:                   '\"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif',\n  font-family--heading:          '\"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif',\n  font-family--code:             '\"Overpass Mono\", Consolas, Monaco, 'Andale Mono', monospace',\n\n  font-size--heading--alpha:     32px,\n  font-size--heading--beta:      24px,\n  font-size--heading--gamma:     21px,\n  font-size--heading--delta:     18px,\n  font-size--heading--epsilon:   16px,\n  font-size--heading--zeta:      14px,\n\n  font-weight--light:            300,\n  font-weight--normal:           500,\n  font-weight--semi-bold:        600,\n  font-weight--bold:             700,\n\n  surface--border-width:         1px,\n  surface--border-width--heavy:  4px,\n  surface--border-style:         solid,\n  surface--border-radius:        3px,\n  surface--border-width--active: 3px,\n\n  icon-size:                     1em,\n\n  ui--element--size:             20px,\n\n  ui--border-width:              1px,\n  ui--border-width--active:      3px,\n  ui--border-style:              solid,\n  ui--border-radius:             2px,\n\n  ui--focus-outline-width:       1px,\n  ui--focus-outline-style:       solid,\n\n  link-decoration: none,\n  link-decoration--hover: underline,\n  link-decoration--focus: underline,\n  link-decoration--visited: none,\n  link-decoration--on-dark: none,\n  link-decoration--hover--on-dark: underline,\n  link-decoration--focus--on-dark: underline,\n  link-decoration--visited--on-dark: none,\n  link-decoration--on-saturated: underline,\n  link-decoration--hover--on-saturated: underline,\n  link-decoration--focus--on-saturated: underline,\n  link-decoration--visited--on-saturated: underline, \n\n  grid-breakpoint--xs:           0,\n  grid-breakpoint--sm:           576px,\n  grid-breakpoint--md:           768px,\n  grid-breakpoint--lg:           992px,\n  grid-breakpoint--xl:           1200px,\n\n  box-shadow--sm:                #{0  #{pfe-size-prem(1)}  #{pfe-size-prem(2)} 0 rgba($pf-color-black-1000, .2)},\n  box-shadow--md:                #{0  #{pfe-size-prem(2)}  #{pfe-size-prem(1)} #{pfe-size-prem(1)} rgba($pf-color-black-1000, .12), 0  #{pfe-size-prem(4)}  #{pfe-size-prem(11)} #{pfe-size-prem(6)} rgba($pf-color-black-1000, .05)},\n  box-shadow--lg:                #{0  #{pfe-size-prem(3)}  #{pfe-size-prem(7)} #{pfe-size-prem(3)} rgba($pf-color-black-1000, .13), 0  #{pfe-size-prem(11)}  #{pfe-size-prem(24)} #{pfe-size-prem(16)} rgba($pf-color-black-1000, .12)},\n  box-shadow--inset:             #{inset 0 0 #{pfe-size-prem(10)} 0 $pf-color-black-100},\n\n  animation-speed:               .3s,\n  animation-timing:              cubic-bezier(0.465, 0.183, 0.153, 0.946),\n  opacity:                       .09\n);\n","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n",null]}