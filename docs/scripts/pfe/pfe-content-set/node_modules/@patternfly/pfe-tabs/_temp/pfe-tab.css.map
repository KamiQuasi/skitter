{"version":3,"sources":["pfe-tab.scss","../../pfe-sass/functions/_custom-properties.scss","pfe-tab.css","../../pfe-sass/mixins/_mixins.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss"],"names":[],"mappings":"AAiCA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,cAAc;EACd,2BC8FkC;ED9FlC,6FC8FkC;ED5FlC,gDC4FkC;ED5FlC,kVC4FkC;EDzFlC,mBCAkC;EDAlC,uDCAkC;EDClC,iBCDkC;EDClC,qDCDkC;EDElC,yBAAyB;EACzB,wBCsFkC;EDtFlC,kGCsFkC;EDpFlC,6BCoFkC;EDpFlC,+DCoFkC;EDnFlC,eAAe;EACf,kBCkFkC;EDlFlC,mDCkFkC;ED/ElC,oBC+EkC;ED/ElC,yDC+EkC;ED9ElC,0ECXkC;EDWlC,yGCXkC;EDYlC,gBCZkC;EDYlC,uDCZkC;EDalC,eC4EkC;ED5ElC,4EC4EkC;AClHpC;;AFgBA;EAyBI,qBAAqB;AErCzB;;AFYA;EA4BM,kBAAkB;EAClB,oBAAoB;EACpB,SAAS;EACT,cCmE8B;EDnE9B,4ECmE8B;ACvGpC;;AFwCU;EACN,4BC8DgC;ED9DhC,iEC8DgC;ACnGpC;;AFoCU;EAGJ,cC4D8B;ED5D9B,oGC4D8B;AC/FpC;;AFsCU;EACN,4BCwDgC;EDxDhC,iECwDgC;AC3FpC;;AFkCU;EAGJ,cCsD8B;EDtD9B,oGCsD8B;ACvFpC;;AFqCU;EACN,4BCiDgC;EDjDhC,iECiDgC;ACnFpC;;AFiCU;EAGJ,cC+C8B;ED/C9B,oGC+C8B;AC/EpC;;AFoCU;EACN,yBC0CgC;ED1ChC,uHC0CgC;AC3EpC;;AFgCU;EAGJ,cCwC8B;EDxC9B,oGCwC8B;ACvEpC;;AFwCA;EACE,qBAAqB;AErCvB;;AFwCA;EACE;IACE,gCAAgC;IAChC,sBAAsB;IACtB,0BClEgC;IDkEhC,oEClEgC;IDmEhC,sBCnEgC;IDmEhC,0DCnEgC;IDoEhC,aCpEgC;IDoEhC,kDCpEgC;IDqEhC,4EAAkB;EErCpB;EFwCA;IACE,uBCgBgC;IDhBhC,qHCgBgC;IDfhC,sBAAsB;EEtCxB;EFyCA;IACE,8BC9EgC;ID8EhC,gJC9EgC;ID+EhC,2BAA2B;EEvC7B;EF0CA;IACE,mCAA0E;IAA1E,iJAA0E;IAC1E,2BCKgC;IDLhC,uOCKgC;IDJhC,8BAAuD;IAAvD,mEAAuD;EExCzD;EF2CA;IACE,mCAA0E;IAA1E,iJAA0E;EEzC5E;EF4CA;IACE,mCAA0E;IAA1E,iJAA0E;IAC1E,gBAAgB;IAChB,8BCNgC;IDMhC,iLCNgC;IDOhC,8BAAuD;IAAvD,mEAAuD;EE1CzD;AACF;;AC9FM;EH8IN;IG9I4F,UAAA;IHgJxF,yBIhJoC;IJiJpC,cI7IoC;EFiGtC;AACF;;AF+CA;EACE,8BAA8B;AE5ChC;;AF+CA;EACE,+BAA+B;AE5CjC;;AFgDA;EACE,yBC/BkC;ED+BlC,gHC/BkC;EDgClC,qBCzHkC;EDyHlC,+DCzHkC;ED0HlC,qBCjCkC;EDiClC,+FCjCkC;EDkClC,6BAA6B;EAC7B,4BCnCkC;EDmClC,iECnCkC;EDoClC,wBC7HkC;ED6HlC,4DC7HkC;ACgFpC;;AFgDA;EACE,yBCxCkC;EDwClC,8DCxCkC;ACLpC;;AFiDA;EACE,sBCtIkC;EDsIlC,kECtIkC;EDuIlC,gBAAgB;EAChB,0BCxIkC;EDwIlC,oECxIkC;EDyIlC,2BCzIkC;EDyIlC,qECzIkC;ED0IlC,0BCjDkC;EDiDlC,kMCjDkC;ACGpC;;ACnIM;EH4KN;IG5K4F,UAAA;IHoLxF,cIhLoC;IJiLpC,sBIxGiC;IJyGjC,8BIrLoC;IJsLpC,0BCvDgC;IDuDhC,kMCvDgC;IDwDhC,gBAAgB;EE3ClB;AACF;;AF8CA;EACE,+BCtJkC;EDsJlC,iJCtJkC;AC2GpC;;AFkDA;EACE;IACE,6BC/JgC;ID+JhC,+IC/JgC;IDgKhC,gCChKgC;IDgKhC,kJChKgC;IDiKhC,sBCjKgC;IDiKhC,kECjKgC;IDkKhC,gBAAgB;EE/ClB;EFkDA;IACE,6BAA6B;IAC7B,kCAAyE;IAAzE,gJAAyE;EEhD3E;EFmDA;IACE,gCAAgC;EEjDlC;EFoDA;IACE,eAAe;IACf,gCAAgC;IAChC,8BAA8B;EElDhC;EFqDA;IACE,0BC5FgC;ID4FhC,+DC5FgC;ID6FhC,yBCtLgC;IDsLhC,mECtLgC;ECmIlC;EFsDA;IACE,0BC1LgC;ID0LhC,oEC1LgC;ID2LhC,6BAA6B;EEpD/B;EFuDA;IACE,yBC/LgC;ID+LhC,mEC/LgC;IDgMhC,uBCvGgC;IDuGhC,qHCvGgC;IDwGhC,+BAA+B;IAC/B,kBAAc;EErDhB;AACF;;AF6DA;EACE,+DAAiB;EACjB,sEAAwB;EACxB,2BC9MkC;ED8MlC,6EC9MkC;ED+MlC,0BC/MkC;ED+MlC,4EC/MkC;ACqJpC;;AF6DA;EACE,yEAAiB;EACjB,yBCpNkC;EDoNlC,mECpNkC;AC0JpC;;ACjMM;EHyPN;IGzP4F,UAAA;IH8PxF,iCAAuD;IAAvD,6EAAuD;EEvDzD;EFkDF;IAOM,yBAAiC;EEtDrC;AACF;;AF0DA;EACE,sEAAwB;EACxB,yBChOkC;EDgOlC,oEChOkC;ACyKpC;;AF2DA;EACE,+EAA2B;AExD7B;;AF2DA;EACE,cChJkC;EDgJlC,oGChJkC;ACwFpC;;AF2DA;EACE,cCpJkC;EDoJlC,oGCpJkC;AC4FpC;;AF2DA;EACE,yDAAiB;AExDnB;;AFgEA;EACE,oEAAiB;EACjB,2EAAwB;AE7D1B;;ACrOM;EHgSN;IGhS4F,UAAA;IHwSxF,6BAA6B;EE7D/B;EFqDF;IAMM,yBAAiC;EExDrC;AACF;;AF6DA;EACE,2EAAwB;EACxB,yEAAuB;AE1DzB;;AF6DA;EACE,8EAAiB;AE1DnB;;AF6DA;EACE,4BCtLkC;EDsLlC,iECtLkC;AC4HpC;;AC5PM;EHyTN;IGzT4F,UAAA;IH2TxF,yBAAyB;EEzD3B;AACF;;AF4DA;EACE,+DAAiB;EACjB,sEAAwB;AEzD1B;;ACxQM;EH+TN;IG/T4F,UAAA;ED6Q1F;EFkDF;IAKM,yBAAiC;EEpDrC;AACF;;AFwDA;EACE,4BCnSkC;EDmSlC,oECnSkC;EDoSlC,wMAA6B;AErD/B;;AFwDA;EACE,gBAAgB;AErDlB","file":"pfe-tab.css","sourcesContent":["@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: tabs;\n\n$LOCAL-VARIABLES: (\n  BackgroundColor:           transparent,\n  BackgroundColor--inactive: pfe-var(surface--lighter),\n  Color:                     pfe-var(text--muted),\n  BorderColor--hover:        $pf-color-black-400, \n  BorderWidth:               pfe-var(ui--border-width--active),\n  tab: ( // to avoid collisions with panel\n    FontSize:                pfe-var(font-size),\n    Margin:                  0 0 calc( #{pfe-var(ui--border-width)} * -1),\n    PaddingTop:              pfe-var(container-padding),\n    PaddingBottom:           pfe-var(container-padding),\n    PaddingRight:            calc(#{pfe-var(container-padding)} * 2),\n    PaddingLeft:             calc(#{pfe-var(container-padding)} * 2),\n    TextTransform:           none,\n  )\n);\n\n// TODO: These vars (focus & highlight) will be deprecated at 1.0  \n$backwards-compatibility: (\n  Color--focus:  pfe-local(focus, pfe-var(text)), \n  BorderColor:   pfe-local(highlight, pfe-var(ui-accent)),\n);\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, $backwards-compatibility);\n\n\n/// ===========================================================================\n/// DEFAULT / WIND TAB VARIANT\n/// ===========================================================================\n\n:host {\n  text-align: left;\n  position: relative;\n  display: block;\n  margin: pfe-local(Margin, $region: tab);\n  // Padding\n  padding:\n    pfe-local(PaddingTop, $region: tab) pfe-local(PaddingRight, $region: tab) pfe-local(PaddingBottom, $region: tab) pfe-local(PaddingLeft, $region: tab);\n  // Borders         \n  border-style: pfe-var(ui--border-style);\n  border-width: pfe-var(ui--border-width);\n  border-color: transparent;\n  border-bottom-width: pfe-local(BorderWidth);\n  // Inner style\n  background-color: pfe-local(BackgroundColor);\n  cursor: pointer;\n  text-align: pfe-local(TextAlign, center, $region: tab);\n\n  // Exposing this for customization\n  text-transform: pfe-local(TextTransform, $region: tab);\n  font-family: pfe-var(font-family);\n  font-weight: pfe-var(font-weight--normal);\n  font-size: pfe-local(FontSize, $region: tab);\n\n  .pfe-tab {\n    display: inline-block;\n\n    * {\n      font-size: inherit;\n      font-weight: inherit;\n      margin: 0;\n      color: pfe-local(Color);\n    }\n  }\n\n  @at-root #{&}(:hover) {\n    border-bottom-color: pfe-local(BorderColor--hover);\n    .pfe-tab * {\n      color: pfe-local(Color--focus);\n    }\n  }\n  @at-root #{&}(:active) {\n    border-bottom-color: pfe-local(BorderColor--hover);\n    .pfe-tab * {\n      color: pfe-local(Color--focus);\n    }\n  }\n\n  @at-root #{&}(:focus) {\n    border-bottom-color: pfe-local(BorderColor--hover);\n    .pfe-tab * {\n      color: pfe-local(Color--focus);\n    }\n  }\n\n  @at-root #{&}([aria-selected=\"true\"]) {\n    border-bottom-color: pfe-local(BorderColor);\n    .pfe-tab * {\n      color: pfe-local(Color--focus);\n    }\n  }\n}\n\n/// ===========================================================================\n/// VERTICAL TAB ORIENTATION\n/// ===========================================================================\n\n:host([pfe-variant=\"earth\"][vertical]) .pfe-tab {\n  display: inline-block;\n}\n\n@media screen and (min-width: pfe-breakpoint(md)) {\n  :host([vertical]) {\n    border-bottom-color: transparent;\n    border-bottom-width: 0;\n    border-left-color: pfe-var(surface--border);\n    border-left-width: pfe-var(ui--border-width);\n    padding: pfe-var(container-padding);\n    --pfe-tabs--Margin: 0 calc(#{pfe-var(ui--border-width)} * -1) 0 0;\n  }\n\n  :host([vertical][aria-selected=\"true\"]) {\n    border-left-color: pfe-local(BorderColor);\n    border-left-width: 3px;\n  }\n\n  :host([vertical][pfe-variant=\"wind\"]) {\n    border-left: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n    text-align: left !important;\n  }\n\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"true\"]) {\n    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;\n    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor);\n    padding-left: calc(#{pfe-var(container-padding)} - 2px);\n  }\n\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"false\"]) {\n    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;\n  }\n\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;\n    border-bottom: 0;\n    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor--hover);\n    padding-left: calc(#{pfe-var(container-padding)} - 2px);\n  }\n}\n\n/// ===========================================================================\n/// EARTH TAB VARIANTS\n/// ===========================================================================\n:host([pfe-variant=\"earth\"]) {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lighter);\n    color: pfe-fetch(text--muted);\n  }\n}\n\n:host(:not([vertical])[pfe-variant=\"earth\"]:not([aria-selected=\"true\"]):first-of-type) {\n  border-left-color: transparent;\n}\n\n:host(:not([vertical])[pfe-variant=\"earth\"]:not([aria-selected=\"true\"]):last-of-type) {\n  border-right-color: transparent;\n}\n\n\n:host([pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n  background-color: pfe-local(BackgroundColor--inactive); //@todo update to use opacity\n  border-color: pfe-var(surface--border);\n  border-top-width: pfe-local(BorderWidth);\n  border-top-color: transparent;\n  border-bottom-color: pfe-local(BorderColor--hover);\n  border-bottom-width: pfe-var(ui--border-width);\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"false\"]:hover) {\n  border-top-color: pfe-local(BorderColor--hover);\n}\n\n// nth of type is needed to override first and last of type selectors above\n:host([pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n  background-color: pfe-var(surface--lightest);\n  border-bottom: 0;\n  border-left-color: pfe-var(surface--border);\n  border-right-color: pfe-var(surface--border);\n  border-top: solid pfe-local(BorderColor) pfe-local(BorderWidth);\n\n  @include browser-query(ie11) {\n    color: pfe-fetch(text--muted);\n    background-color: pfe-fetch(surface--lightest);\n    border-left: pfe-fetch(ui--border-width) pfe-fetch(ui--border-style) pfe-fetch(surface--border);\n    border-top: pfe-local(BorderWidth) pfe-fetch(ui--border-style) pfe-local(BorderColor);\n    border-bottom: 0;\n  }\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"true\"]:last-of-type) {\n  border-right: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n}\n\n/// ===========================================================================\n/// EARTH TAB VERTICAL ORIENTATION\n/// ===========================================================================\n\n@media screen and (min-width: #{pfe-breakpoint(md)}) {\n  :host([vertical][pfe-variant=\"earth\"]) {\n    border-top: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n    border-bottom: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n    border-left-width: pfe-var(ui--border-width--active);\n    text-align: left;\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:first-of-type) {\n    border-top-color: transparent;\n    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:last-of-type) {\n    border-bottom-color: transparent;\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n    border-right: 0;\n    border-bottom-color: transparent;\n    border-left-color: transparent;\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:hover) {\n    border-left-color: pfe-local(BorderColor--hover);\n    border-top-color: pfe-var(surface--border);\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:first-of-type:hover) {\n    border-left-color: pfe-var(surface--border);\n    border-top-color: transparent;\n  }\n\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n    border-top-color: pfe-var(surface--border);\n    border-left-color: pfe-local(BorderColor);\n    border-right-color: transparent;\n    margin-right: #{pfe-fetch(ui--border-width) * -1};\n  }\n}\n\n/// ===========================================================================\n/// EARTH TAB VARIANTS ON DARK & SATURATED\n/// ===========================================================================\n/// In dark & saturated contexts, we override the local color vars\n\n:host([on=\"dark\"][pfe-variant=\"earth\"]) {\n  --pfe-tabs--Color: #{pfe-var(text--on-dark)};\n  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};\n  border-right-color: pfe-var(surface--border--darker);\n  border-left-color: pfe-var(surface--border--darker);\n}\n\n:host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n  --pfe-tabs--Color: #{pfe-var(text--muted--on-dark)};\n  background-color: pfe-var(surface--darker);\n\n  @include browser-query(ie11) {\n    background-color: pfe-var(surface--lightest) !important;\n    .pfe-tab * {\n      color: pfe-fetch(text) !important;\n    }\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};\n  background-color: pfe-var(surface--darkest);\n}\n\n// SATURATED\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"false\"]) {\n  --pfe-tabs--BackgroundColor: #{pfe-var(surface--lighter)};\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"true\"]) {\n  color: pfe-local(Color--focus);\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"]:hover) {\n  color: pfe-local(Color--focus);\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color: #{pfe-var(text)};\n}\n\n/// ===========================================================================\n/// WIND TAB VARIANTS ON DARK & SATURATED\n/// ===========================================================================\n\n// SATURATED\n:host([on=\"saturated\"][pfe-variant=\"wind\"]) {\n  --pfe-tabs--Color: #{pfe-var(text--on-saturated)};\n  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};\n\n  @include browser-query(ie11) {\n    .pfe-tab * {\n      color: pfe-fetch(text) !important;\n    }\n    background-color: transparent;\n  }\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};\n  --pfe-tabs--BorderColor: #{pfe-var(surface--lightest)};\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"false\"]) {\n  --pfe-tabs--Color: #{pfe-var(text--muted--on-saturated)};\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n  border-bottom-color: pfe-local(BorderColor--hover);\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"true\"]:last-of-type) {\n  @include browser-query(ie11) {\n    border-left: 0 !important;\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"]) {\n  --pfe-tabs--Color: #{pfe-var(text--on-dark)}; \n  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};\n  @include browser-query(ie11) {\n    .pfe-tab * {\n      color: pfe-fetch(text) !important;\n    }\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n  border-bottom-color: pfe-var(surface--base);\n  --pfe-tabs__tab--BorderBottom: #{pfe-local(BorderWidth)} #{pfe-var(ui--border-style)} #{pfe-var(surface--border)};\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"][vertical][aria-selected=\"false\"]:hover) {\n  border-bottom: 0;\n}","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}",":host {\n  text-align: left;\n  position: relative;\n  display: block;\n  margin: var(--pfe-tabs__tab--Margin, 0 0 calc( var(--pfe-theme--ui--border-width, 1px) * -1));\n  padding: var(--pfe-tabs__tab--PaddingTop, var(--pfe-theme--container-padding, 16px)) var(--pfe-tabs__tab--PaddingRight, calc(var(--pfe-theme--container-padding, 16px) * 2)) var(--pfe-tabs__tab--PaddingBottom, var(--pfe-theme--container-padding, 16px)) var(--pfe-tabs__tab--PaddingLeft, calc(var(--pfe-theme--container-padding, 16px) * 2));\n  border-style: var(--pfe-theme--ui--border-style, solid);\n  border-width: var(--pfe-theme--ui--border-width, 1px);\n  border-color: transparent;\n  border-bottom-width: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px));\n  background-color: var(--pfe-tabs--BackgroundColor, transparent);\n  cursor: pointer;\n  text-align: var(--pfe-tabs__tab--TextAlign, center);\n  text-transform: var(--pfe-tabs__tab--TextTransform, none);\n  font-family: var(--pfe-theme--font-family, \"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif);\n  font-weight: var(--pfe-theme--font-weight--normal, 500);\n  font-size: var(--pfe-tabs__tab--FontSize, var(--pfe-theme--font-size, 16px));\n}\n\n:host .pfe-tab {\n  display: inline-block;\n}\n\n:host .pfe-tab * {\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 0;\n  color: var(--pfe-tabs--Color, var(--pfe-theme--color--text--muted, #6a6e73));\n}\n\n:host(:hover) {\n  border-bottom-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n}\n\n:host(:hover) .pfe-tab * {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host(:active) {\n  border-bottom-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n}\n\n:host(:active) .pfe-tab * {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host(:focus) {\n  border-bottom-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n}\n\n:host(:focus) .pfe-tab * {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host([aria-selected=\"true\"]) {\n  border-bottom-color: var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c)));\n}\n\n:host([aria-selected=\"true\"]) .pfe-tab * {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host([pfe-variant=\"earth\"][vertical]) .pfe-tab {\n  display: inline-block;\n}\n\n@media screen and (min-width: 768px) {\n  :host([vertical]) {\n    border-bottom-color: transparent;\n    border-bottom-width: 0;\n    border-left-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n    border-left-width: var(--pfe-theme--ui--border-width, 1px);\n    padding: var(--pfe-theme--container-padding, 16px);\n    --pfe-tabs--Margin: 0 calc(var(--pfe-theme--ui--border-width, 1px) * -1) 0 0;\n  }\n  :host([vertical][aria-selected=\"true\"]) {\n    border-left-color: var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c)));\n    border-left-width: 3px;\n  }\n  :host([vertical][pfe-variant=\"wind\"]) {\n    border-left: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n    text-align: left !important;\n  }\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"true\"]) {\n    border-right: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) transparent;\n    border-left: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c)));\n    padding-left: calc(var(--pfe-theme--container-padding, 16px) - 2px);\n  }\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"false\"]) {\n    border-right: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) transparent;\n  }\n  :host([vertical][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n    border-right: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) transparent;\n    border-bottom: 0;\n    border-left: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n    padding-left: calc(var(--pfe-theme--container-padding, 16px) - 2px);\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([pfe-variant=\"earth\"]) {\n    /* IE10+ */\n    background-color: #f0f0f0;\n    color: #6a6e73;\n  }\n}\n\n:host(:not([vertical])[pfe-variant=\"earth\"]:not([aria-selected=\"true\"]):first-of-type) {\n  border-left-color: transparent;\n}\n\n:host(:not([vertical])[pfe-variant=\"earth\"]:not([aria-selected=\"true\"]):last-of-type) {\n  border-right-color: transparent;\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n  background-color: var(--pfe-tabs--BackgroundColor--inactive, var(--pfe-theme--color--surface--lighter, #f0f0f0));\n  border-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n  border-top-width: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px));\n  border-top-color: transparent;\n  border-bottom-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n  border-bottom-width: var(--pfe-theme--ui--border-width, 1px);\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"false\"]:hover) {\n  border-top-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n  background-color: var(--pfe-theme--color--surface--lightest, #fff);\n  border-bottom: 0;\n  border-left-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n  border-right-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n  border-top: solid var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c))) var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px));\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n    /* IE10+ */\n    color: #6a6e73;\n    background-color: #fff;\n    border-left: 1px solid #d2d2d2;\n    border-top: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) solid var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c)));\n    border-bottom: 0;\n  }\n}\n\n:host([pfe-variant=\"earth\"][aria-selected=\"true\"]:last-of-type) {\n  border-right: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n@media screen and (min-width: 768px) {\n  :host([vertical][pfe-variant=\"earth\"]) {\n    border-top: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n    border-bottom: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n    border-left-width: var(--pfe-theme--ui--border-width--active, 3px);\n    text-align: left;\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:first-of-type) {\n    border-top-color: transparent;\n    border-left: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) transparent;\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:last-of-type) {\n    border-bottom-color: transparent;\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n    border-right: 0;\n    border-bottom-color: transparent;\n    border-left-color: transparent;\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:hover) {\n    border-left-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n    border-top-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"false\"]:first-of-type:hover) {\n    border-left-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n    border-top-color: transparent;\n  }\n  :host([vertical][pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n    border-top-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n    border-left-color: var(--pfe-tabs--BorderColor, var(--pfe-tabs--highlight, var(--pfe-theme--color--ui-accent, #06c)));\n    border-right-color: transparent;\n    margin-right: -1px;\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"earth\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-tabs--Color--focus: var(--pfe-theme--color--text--on-dark, #fff);\n  border-right-color: var(--pfe-theme--color--surface--border--darker, #6a6e73);\n  border-left-color: var(--pfe-theme--color--surface--border--darker, #6a6e73);\n}\n\n:host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n  background-color: var(--pfe-theme--color--surface--darker, #3c3f42);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"false\"]) {\n    /* IE10+ */\n    background-color: var(--pfe-theme--color--surface--lightest, #fff) !important;\n  }\n  :host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"false\"]) .pfe-tab * {\n    color: #151515 !important;\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"earth\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color--focus: var(--pfe-theme--color--text--on-dark, #fff);\n  background-color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"false\"]) {\n  --pfe-tabs--BackgroundColor: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"true\"]) {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"]:hover) {\n  color: var(--pfe-tabs--Color--focus, var(--pfe-tabs--focus, var(--pfe-theme--color--text, #151515)));\n}\n\n:host([pfe-variant=\"earth\"][on=\"saturated\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text, #151515);\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-tabs--Color--focus: var(--pfe-theme--color--text--on-saturated, #fff);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([on=\"saturated\"][pfe-variant=\"wind\"]) {\n    /* IE10+ */\n    background-color: transparent;\n  }\n  :host([on=\"saturated\"][pfe-variant=\"wind\"]) .pfe-tab * {\n    color: #151515 !important;\n  }\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"true\"]) {\n  --pfe-tabs--Color--focus: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-tabs--BorderColor: var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"false\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);\n}\n\n:host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n  border-bottom-color: var(--pfe-tabs--BorderColor--hover, #b8bbbe);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([on=\"saturated\"][pfe-variant=\"wind\"][aria-selected=\"true\"]:last-of-type) {\n    /* IE10+ */\n    border-left: 0 !important;\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"]) {\n  --pfe-tabs--Color: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-tabs--Color--focus: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([on=\"dark\"][pfe-variant=\"wind\"]) {\n    /* IE10+ */\n  }\n  :host([on=\"dark\"][pfe-variant=\"wind\"]) .pfe-tab * {\n    color: #151515 !important;\n  }\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"][aria-selected=\"false\"]:hover) {\n  border-bottom-color: var(--pfe-theme--color--surface--base, #f0f0f0);\n  --pfe-tabs__tab--BorderBottom: var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host([on=\"dark\"][pfe-variant=\"wind\"][vertical][aria-selected=\"false\"]:hover) {\n  border-bottom: 0;\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n"]}