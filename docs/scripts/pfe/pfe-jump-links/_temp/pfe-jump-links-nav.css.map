{"version":3,"sources":["pfe-jump-links-nav.scss","../../pfe-sass/functions/_custom-properties.scss","pfe-jump-links-nav.css","../../pfe-sass/mixins/_custom-properties.scss"],"names":[],"mappings":"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","file":"pfe-jump-links-nav.css","sourcesContent":["// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: jump-links;\n\n$LOCAL-VARIABLES: (\n  horizontal-spacer: calc(#{pfe-var(container-padding)} * 2),\n  vertical-spacer: calc(#{pfe-var(container-padding)} * 2),\n  BackgroundColor: pfe-var(surface--lightest),\n  BorderColor: pfe-var(ui-accent),\n  FontSize: pfe-var(font-size--heading--epsilon),\n  heading: (\n    FontSize: pfe-var(font-size--heading--zeta)\n  ),\n  link: (\n    horizontal-spacer: calc(#{pfe-var(content-spacer)} / 3),\n    vertical-spacer: calc(#{pfe-var(content-spacer)} / 6),\n  )\n);\n\n:host {\n  box-sizing: border-box;\n  font-family: pfe-var(font-family);\n  font-weight: pfe-var(font-weight--normal);\n  font-weight: 400; // remove this once font-weight--normal is 400\n  display: block;\n  position: sticky;\n  top: calc(#{pfe-var(container-spacer)} * 4);\n  padding-left: 0;\n\n  background-color: pfe-local(BackgroundColor);\n\n  @media(min-width: #{pfe-breakpoint(lg)}) {\n    border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n    padding: pfe-local(vertical-spacer) pfe-local(horizontal-spacer);\n  }\n\n  ::slotted([slot=\"#{$repo}-#{$LOCAL}-nav--heading\"]) {\n    color: pfe-broadcasted(text);\n    \n    margin: 0 0 pfe-var(container-spacer);\n    font-size: pfe-local(FontSize, $region: heading);\n    font-weight: 400;\n    text-transform: uppercase;\n\n    @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n      display: none;\n    }\n  }\n\n  @at-root #{&}([pfe-sticky=\"false\"]) {\n    position: relative;\n  }\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n\n  ul {\n    padding: 0;\n    border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n  }\n\n  li {\n    border-left: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;\n    display: block;\n    text-decoration: none;\n    margin-left: calc(#{pfe-var(surface--border-width)} * -1);\n\n    &.expand {\n      ul {\n        flex: 1;\n      }\n\n      .sub-section {\n        display: table;\n        height: auto;\n      }\n    }\n\n    &[active] {\n      border-left-color: pfe-local(BorderColor);\n    }\n  }\n\n  a {\n    position: relative;\n    display: table;\n\n    color: pfe-var(ui-disabled--text);\n    font-size: pfe-local(FontSize);\n    text-decoration: none;\n    line-height: pfe-var(line-height);\n\n    padding: calc(#{pfe-local(vertical-spacer, $region: link)} * 2) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n    &.has-sub-section {\n      padding-bottom: pfe-local(vertical-spacer, $region: link);\n    }\n\n    &.sub-section {\n      margin-left: calc(#{pfe-var(container-spacer)} * 0.75);\n      font-size: calc(#{pfe-local(FontSize)} * 0.85);\n      padding: pfe-local(vertical-spacer, $region: link) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n      @media(min-width: #{pfe-breakpoint(lg)}) {\n        display: none;\n      }\n      \n      &:last-child {\n        padding-bottom: pfe-local(horizontal-spacer, $region: link);\n      }\n    }\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      width: calc(100% - #{pfe-var(surface--border-width--heavy)});\n      height: calc(100% - #{pfe-var(surface--border-width--heavy)});\n      top: 0;\n      left: 0;\n    }\n\n    &:focus {\n      outline: none;\n\n      &::after {\n        border-radius: pfe-var(surface--border-radius);\n        border: 2px pfe-var(surface--border-style) pfe-var(link);\n      }\n    }\n\n    &:hover {\n      color: pfe-var(surface--darkest);\n    }\n\n    &[active] {\n      color: pfe-var(surface--darkest);\n    }\n  }\n\n  ul ul {\n    display: flex;\n    flex-direction: column;\n    flex: 0;\n\n    margin: 0;\n    padding: 0;\n\n    border-left: none !important;\n\n    overflow-y: hidden;\n    transition: flex 1s linear;\n    li {\n      border-left: none !important;\n    }\n  }\n}\n\n// Set the local variable to use the accordion namespace\n$temp: $LOCAL;\n$LOCAL: accordion;\n$accordion-styles: (\n  BackgroundColor: transparent,\n  accent: transparent,\n  BorderLeftWidth: 0,\n  BorderColor: transparent,\n  BorderColor--accent: transparent\n);\n\npfe-accordion {\n  @include pfe-print-local($accordion-styles);\n  \n  @media(min-width: #{pfe-breakpoint(lg)}) {\n    // --pfe-accordion__base--Padding: 0;\n    @include pfe-print-local((\n      base: (Padding: 0)\n    ));\n  }\n\n  @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n    border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n  }\n}\n\npfe-accordion-header {\n  // TODO: When variables are available in accordion, remove theme changes from this file\n  // hide accordion left border:\n  --pfe-theme--color--surface--border: transparent;\n  --pfe-theme--color--ui-base--on-dark: transparent;\n  --pfe-theme--color--ui-base: transparent;\n\n  position: sticky;\n  top: 0;\n\n  @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n    background-color: pfe-var(surface--lightest);\n    --theme: light;\n  }\n  @media(min-width: #{pfe-breakpoint(lg)}) {\n    visibility: collapse !important;\n    display: none;\n  }\n}\n\npfe-accordion-panel {\n  // hide accordion left border:\n  border-left-color: transparent;\n  \n  @media(min-width: #{pfe-breakpoint(lg)}) {\n    visibility: collapse;\n    display: none;\n    opacity: 1;\n    display: block;\n  }\n\n  > pfe-jump-links-nav {\n    @media(min-width: #{pfe-breakpoint(lg)}) {\n      width: 100%;\n      display: block;\n      visibility: visible;\n    }\n  }\n}\n\n$LOCAL: $temp;\n\n:host([pfe-color=\"darkest\"]) {\n  @include pfe-print-local((\n    theme: dark,\n    BackgroundColor: pfe-var(surface--darkest)\n  ));\n\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled--text);\n\n  pfe-accordion-header,\n  pfe-accordion-panel,\n  button[aria-expanded=\"true\"] {\n    --pfe-accordion--BackgroundColor: #{pfe-var(surface--darkest)};\n    --pfe-#{$LOCAL}--BackgroundColor: #{pfe-var(surface--darkest)};\n  }\n\n  ::slotted([slot=\"#{$repo}-#{$LOCAL}-nav--heading\"]) {\n    color: pfe-var(surface--lighter);\n  }\n\n  ul {\n    border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) #{pfe-var(ui-disabled--text)};\n\n    li[active] {\n      border-left: 3px pfe-var(surface--border-style) pfe-var(ui-accent);\n    }\n\n    a {\n      color: pfe-var(ui-accent--focus--on-dark);\n\n      &:hover {\n        color: pfe-var(ui-accent--hover--on-dark);\n      }\n\n      &[active] {\n        color: pfe-var(ui-accent--on-dark);\n      }\n\n      &:focus::after {\n        border-color: #{pfe-var(link--on-dark)};\n      }\n    }\n  }\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([pfe-c-horizontal]) {\n  padding: 0;\n  top: 0;\n  width: 100%;\n\n  nav {\n    min-height: calc(#{pfe-var(container-spacer)} * 5.5);\n    background-color: pfe-var(surface--lighter);\n    display: flex;\n    position: relative;\n    .pfe-#{$LOCAL}-nav__heading {\n      display: none;\n    }\n\n    ::slotted([slot=\"pfe-#{$LOCAL}-nav--logo\"]) {\n      position: absolute;\n      left: 0;\n      max-height: calc(#{pfe-var(container-spacer)} * 3.5);\n      max-width: calc(#{pfe-var(container-spacer)} * 14);\n      top: calc(#{pfe-var(container-spacer)} * 1);\n\n      @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n        left: calc(#{pfe-var(container-spacer)} * 2);\n      }\n\n      @media(min-width: #{pfe-breakpoint(lg)}) {\n        left: calc(#{pfe-var(container-spacer)} * 4);\n      }\n    }\n\n    ::slotted([slot=\"pfe-#{$LOCAL}-nav--cta\"]) {\n      position: absolute;\n\n      @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n        right: calc(#{pfe-var(container-spacer)} * 2);\n      }\n\n      @media(min-width: #{pfe-breakpoint(lg)}) {\n        right: calc(#{pfe-var(container-spacer)} * 4);\n      }\n\n      top: calc(#{pfe-var(container-spacer)} * 1);\n    }\n  }\n\n  #container {\n    flex: 1;\n    display: flex;\n    justify-items: center;\n    flex-direction: column;\n  }\n\n  ul {\n    border: none;\n    display: block;\n    text-align: center;\n    flex: 1;\n    display: flex;\n    padding: 0;\n    width: auto;\n    margin: 0;\n    margin-left: auto;\n    margin-right: auto;\n\n    li {\n      padding: 0 calc(#{pfe-var(container-spacer)} * 1.5);\n      display: flex;\n      height: calc(#{pfe-var(container-spacer)} * 5);\n      align-items: center;\n      border-top: 4px pfe-var(surface--border-style) transparent;\n      border-bottom: 4px pfe-var(surface--border-style) transparent;\n      border-left: none;\n      border-right: none;\n\n      &[active] {\n        border-top: 4px pfe-var(surface--border-style) #{pfe-var(ui-accent)};\n      }\n    }\n\n    a {\n      text-decoration: none;\n      color: #{pfe-var(ui-disabled--text)};\n      &[active] {\n        color: #{pfe-var(surface--darkest)};\n      }\n      &:hover {\n        color: #{pfe-var(surface--darkest)};\n      }\n    }\n  }\n\n  @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {\n    nav {\n      min-height: calc(#{pfe-var(container-spacer)} * 5.5);\n      background-color: #{pfe-var(surface--lighter)}\n    }\n\n    .pfe-#{$LOCAL}-nav {\n      display: none;\n    }\n  }\n}","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}",":host {\n  box-sizing: border-box;\n  font-family: var(--pfe-theme--font-family, \"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif);\n  font-weight: var(--pfe-theme--font-weight--normal, 500);\n  font-weight: 400;\n  display: block;\n  position: sticky;\n  top: calc(var(--pfe-theme--container-spacer, 16px) * 4);\n  padding-left: 0;\n  background-color: var(--pfe-jump-links--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n}\n\n@media (min-width: 992px) {\n  :host {\n    border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent;\n    padding: var(--pfe-jump-links--vertical-spacer, calc(var(--pfe-theme--container-padding, 16px) * 2)) var(--pfe-jump-links--horizontal-spacer, calc(var(--pfe-theme--container-padding, 16px) * 2));\n  }\n}\n\n:host ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n  color: var(--pfe-broadcasted--text, #3c3f42);\n  margin: 0 0 var(--pfe-theme--container-spacer, 16px);\n  font-size: var(--pfe-jump-links__heading--FontSize, var(--pfe-theme--font-size--heading--zeta, 14px));\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n@media (max-width: 991px) {\n  :host ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n    display: none;\n  }\n}\n\n:host([pfe-sticky=\"false\"]) {\n  position: relative;\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n}\n\nnav ul {\n  padding: 0;\n  border-left: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n}\n\nnav li {\n  border-left: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  display: block;\n  text-decoration: none;\n  margin-left: calc(var(--pfe-theme--surface--border-width, 1px) * -1);\n}\n\nnav li.expand ul {\n  flex: 1;\n}\n\nnav li.expand .sub-section {\n  display: table;\n  height: auto;\n}\n\nnav li[active] {\n  border-left-color: var(--pfe-jump-links--BorderColor, var(--pfe-theme--color--ui-accent, #06c));\n}\n\nnav a {\n  position: relative;\n  display: table;\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n  font-size: var(--pfe-jump-links--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px));\n  text-decoration: none;\n  line-height: var(--pfe-theme--line-height, 1.5);\n  padding: calc(var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3)) * 2);\n}\n\nnav a.has-sub-section {\n  padding-bottom: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6));\n}\n\nnav a.sub-section {\n  margin-left: calc(var(--pfe-theme--container-spacer, 16px) * 0.75);\n  font-size: calc(var(--pfe-jump-links--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px)) * 0.85);\n  padding: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6)) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3)) * 2);\n}\n\n@media (min-width: 992px) {\n  nav a.sub-section {\n    display: none;\n  }\n}\n\nnav a.sub-section:last-child {\n  padding-bottom: var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3));\n}\n\nnav a::after {\n  content: \"\";\n  position: absolute;\n  width: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  height: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  top: 0;\n  left: 0;\n}\n\nnav a:focus {\n  outline: none;\n}\n\nnav a:focus::after {\n  border-radius: var(--pfe-theme--surface--border-radius, 3px);\n  border: 2px var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--link, #06c);\n}\n\nnav a:hover {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\nnav a[active] {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\nnav ul ul {\n  display: flex;\n  flex-direction: column;\n  flex: 0;\n  margin: 0;\n  padding: 0;\n  border-left: none !important;\n  overflow-y: hidden;\n  transition: flex 1s linear;\n}\n\nnav ul ul li {\n  border-left: none !important;\n}\n\npfe-accordion {\n  --pfe-accordion--BackgroundColor: transparent;\n  --pfe-accordion--accent: transparent;\n  --pfe-accordion--BorderLeftWidth: 0;\n  --pfe-accordion--BorderColor: transparent;\n  --pfe-accordion--BorderColor--accent: transparent;\n}\n\n@media (min-width: 992px) {\n  pfe-accordion {\n    --pfe-accordion__base--Padding: 0;\n  }\n}\n\n@media (max-width: 991px) {\n  pfe-accordion {\n    border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n  }\n}\n\npfe-accordion-header {\n  --pfe-theme--color--surface--border: transparent;\n  --pfe-theme--color--ui-base--on-dark: transparent;\n  --pfe-theme--color--ui-base: transparent;\n  position: sticky;\n  top: 0;\n}\n\n@media (max-width: 991px) {\n  pfe-accordion-header {\n    background-color: var(--pfe-theme--color--surface--lightest, #fff);\n    --theme: light;\n  }\n}\n\n@media (min-width: 992px) {\n  pfe-accordion-header {\n    visibility: collapse !important;\n    display: none;\n  }\n}\n\npfe-accordion-panel {\n  border-left-color: transparent;\n}\n\n@media (min-width: 992px) {\n  pfe-accordion-panel {\n    visibility: collapse;\n    display: none;\n    opacity: 1;\n    display: block;\n  }\n}\n\n@media (min-width: 992px) {\n  pfe-accordion-panel > pfe-jump-links-nav {\n    width: 100%;\n    display: block;\n    visibility: visible;\n  }\n}\n\n:host([pfe-color=\"darkest\"]) {\n  --pfe-jump-links--theme: dark;\n  --pfe-jump-links--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n}\n\n:host([pfe-color=\"darkest\"]) pfe-accordion-header,\n:host([pfe-color=\"darkest\"]) pfe-accordion-panel,\n:host([pfe-color=\"darkest\"]) button[aria-expanded=\"true\"] {\n  --pfe-accordion--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-jump-links--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\n:host([pfe-color=\"darkest\"]) ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n  color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n}\n\n:host([pfe-color=\"darkest\"]) ul {\n  border-left: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n}\n\n:host([pfe-color=\"darkest\"]) ul li[active] {\n  border-left: 3px var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-accent, #06c);\n}\n\n:host([pfe-color=\"darkest\"]) ul a {\n  color: var(--pfe-theme--color--ui-accent--focus--on-dark, #2b9af3);\n}\n\n:host([pfe-color=\"darkest\"]) ul a:hover {\n  color: var(--pfe-theme--color--ui-accent--hover--on-dark, #2b9af3);\n}\n\n:host([pfe-color=\"darkest\"]) ul a[active] {\n  color: var(--pfe-theme--color--ui-accent--on-dark, #73bcf7);\n}\n\n:host([pfe-color=\"darkest\"]) ul a:focus::after {\n  border-color: var(--pfe-theme--color--link--on-dark, #73bcf7);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([pfe-c-horizontal]) {\n  padding: 0;\n  top: 0;\n  width: 100%;\n}\n\n:host([pfe-c-horizontal]) nav {\n  min-height: calc(var(--pfe-theme--container-spacer, 16px) * 5.5);\n  background-color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n  display: flex;\n  position: relative;\n}\n\n:host([pfe-c-horizontal]) nav .pfe-jump-links-nav__heading {\n  display: none;\n}\n\n:host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n  position: absolute;\n  left: 0;\n  max-height: calc(var(--pfe-theme--container-spacer, 16px) * 3.5);\n  max-width: calc(var(--pfe-theme--container-spacer, 16px) * 14);\n  top: calc(var(--pfe-theme--container-spacer, 16px) * 1);\n}\n\n@media (max-width: 991px) {\n  :host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n    left: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n    left: calc(var(--pfe-theme--container-spacer, 16px) * 4);\n  }\n}\n\n:host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 16px) * 1);\n}\n\n@media (max-width: 991px) {\n  :host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n    right: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([pfe-c-horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n    right: calc(var(--pfe-theme--container-spacer, 16px) * 4);\n  }\n}\n\n:host([pfe-c-horizontal]) #container {\n  flex: 1;\n  display: flex;\n  justify-items: center;\n  flex-direction: column;\n}\n\n:host([pfe-c-horizontal]) ul {\n  border: none;\n  display: block;\n  text-align: center;\n  flex: 1;\n  display: flex;\n  padding: 0;\n  width: auto;\n  margin: 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n:host([pfe-c-horizontal]) ul li {\n  padding: 0 calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n  display: flex;\n  height: calc(var(--pfe-theme--container-spacer, 16px) * 5);\n  align-items: center;\n  border-top: 4px var(--pfe-theme--surface--border-style, solid) transparent;\n  border-bottom: 4px var(--pfe-theme--surface--border-style, solid) transparent;\n  border-left: none;\n  border-right: none;\n}\n\n:host([pfe-c-horizontal]) ul li[active] {\n  border-top: 4px var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-accent, #06c);\n}\n\n:host([pfe-c-horizontal]) ul a {\n  text-decoration: none;\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n}\n\n:host([pfe-c-horizontal]) ul a[active] {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\n:host([pfe-c-horizontal]) ul a:hover {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\n@media (max-width: 991px) {\n  :host([pfe-c-horizontal]) nav {\n    min-height: calc(var(--pfe-theme--container-spacer, 16px) * 5.5);\n    background-color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n  }\n  :host([pfe-c-horizontal]) .pfe-jump-links-nav {\n    display: none;\n  }\n}\n","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not pfe-broadcasted(#{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    --#{$repo}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context})};\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n    @each $property, $value in $map {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-print-local((\n                BackgroundColor: pfe-var(surface--#{$color}),\n                theme: pfe-var(surface--#{$color}--theme, #{$theme})\n            ));\n            @extend %fallback-surface;\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n    }\n    @if $ie-fallback {\n        :host {\n            @extend %fallback-text;\n        }\n    }\n}\n"]}