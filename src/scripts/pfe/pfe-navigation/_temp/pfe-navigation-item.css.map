{"version":3,"sources":["pfe-navigation-item.scss","../../pfe-sass/extends/_extends.scss","pfe-navigation-item.css","_shared-assets.scss","../../pfe-sass/functions/_custom-properties.scss","../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/mixins/_components.scss","../../pfe-sass/mixins/_containers.scss"],"names":[],"mappings":"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","file":"pfe-navigation-item.css","sourcesContent":["@import \"_shared-assets\";\n\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  BackgroundColor: transparent,\n  Color:           #{pfe-var(text--on-dark)},\n  BorderColor:     transparent,\n  BorderTopColor:  transparent,\n  MinWidth:        auto,\n  Height:          84px,\n  trigger-icon: (\n    Visible: hidden\n  ),\n  trigger: (\n    FontSize: 16px,\n    Padding:  calc(#{pfe-var(container-padding)} * .5),\n    MaxWidth: 100%\n  ),\n  tray: (\n    BackgroundColor:  #{pfe-var(surface--lightest)},\n    Color:            #{pfe-var(text)}\n  )\n));\n\n:host {\n  display: flex;\n  flex-direction: column;\n  line-height: 1.2;\n\n  height: 100%;\n  min-width: pfe-local(MinWidth);\n\n  @media screen and (max-width: #{pfe-breakpoint(xl)}) {\n    width: 100%;\n  }\n  @media screen and (min-width: pfe-breakpoint(\"sm-mobile\", $map: false)) {\n    --pfe-navigation__trigger--Padding: #{pfe-var(container-padding)};\n  }\n}\n\n// ---------------------//\n// -- STATES\n// ---------------------//\n\n// Indicates this is the current section the user is visiting\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n}\n\n// When the navigation item is expanded\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     #{pfe-var(surface--lightest)};\n  --pfe-navigation--BorderTopColor:  #{pfe-var(ui-accent)};\n\n  --pfe-navigation--BackgroundColor: #{pfe-var(surface--lightest)};\n  --pfe-navigation--Color: #{pfe-var(text)};\n}\n\n// ---------------------//\n// -- CONTEXTS\n// ---------------------//\n\n// If the navigation item has an icon, i.e. a utility link\n:host([pfe-icon]) {\n  --pfe-navigation--MinWidth: 50px;\n  --pfe-navigation__trigger--FontSize: 12px;\n  --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} * .625);\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  flex: auto;// 1 0 22%;\n  width: auto;\n  min-width: 65px;\n\n  // when utilities are shown in the black bar\n  @media screen and (min-width: 640px) {\n    width: 70px;\n  }\n  @media screen and (max-height: 500px) {\n    --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} / 3) calc(#{pfe-var(container-padding)} *.5);\n  }\n\n  @media screen and (min-width: 1024px) {\n    flex: auto;// 1 0 26%;\n  }\n}\n\n:host(:not([pfe-icon])) {\n  --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} * .75);\n}\n\n// Hide the icon if there is no tray\n:host(:not([has_tray])),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n// Mobile menu experience\n:host([is_nested]:not([parent_hidden])) {\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  max-width: pfe-local(Width, $fallback: 100%);\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n\n  @each $prop in (text-decoration, text-decoration--hover, text-decoration--focus) {\n    --pfe-theme--link--#{$prop}: none;\n  }\n\n  --pfe-broadcasted--text: #{pfe-local(Color)};\n  --pfe-broadcasted--link: #{pfe-local(Color)};\n  @each $state in (hover, focus, visited) {\n    --pfe-broadcasted--link--#{$state}: #{pfe-local(Color)};\n\n  }\n\n  // Enforce the font-size for the navigation regardless of h-level settings\n  @each $level in (alpha, beta, gamma) {\n    --pfe-theme--font-size--#{$level}: #{pfe-local(\n      $cssvar: FontSize,\n      $region: trigger,\n      $fallback: #{$trigger--FontSize--fallback}\n    )};\n    --pfe-theme--font-weight--#{$level}: #{pfe-local(\n      $cssvar: FontWeight,\n      $fallback: #{$trigger--FontWeight--fallback}\n    )};\n  }\n\n  border-top:         pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) pfe-local(BorderTopColor);\n  border-right:       pfe-var(surface--border-width) dashed pfe-local(BorderColor);\n  border-bottom:      pfe-var(surface--border-width) dashed pfe-local(BorderColor);\n  border-left:        pfe-var(surface--border-width) dashed pfe-local(BorderColor);\n  background-color:   pfe-local(BackgroundColor);\n  color:              pfe-local(Color);\n  padding:            pfe-local(Padding, $region: trigger);\n  position:           relative;\n  display:            flex;\n  flex-grow:          1;\n  flex-direction:     column;\n  flex-wrap:          nowrap;\n  align-items:        center;\n  justify-content:    center;\n  transition:         all pfe-var(animation-timing);\n  outline:            none;\n  cursor:             pointer;\n\n  &:hover {\n    --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n    --pfe-navigation__trigger-icon--Visible: visible;\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-var(link--hover)};\n    }\n\n    :host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      @include pfe-arrow-color(#{pfe-local(Color)});\n    }\n\n    @media screen and (min-width: #{pfe-breakpoint(xl)}) {\n      :host([has_tray]:not(.expanded)) & {\n        --pfe-navigation__trigger-icon--Visible: visible;\n      }\n    }\n  }\n\n  &:focus {\n    --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n    --pfe-navigation--BorderColor:    #{pfe-var(surface--lightest)};\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-var(link--focus)};\n    }\n  }\n\n  // After element is the filled-in dropdown caret.\n  :host(:not([pfe-icon])) &::after {\n    display: block;\n    content: \" \";\n    visibility: pfe-local(Visible, $region: trigger-icon, $fallback: hidden);\n\n    @include pfe-arrow(down, #{pfe-var(feedback--default)}, $width: 6px, $height: 6px);\n    position: absolute;\n    bottom: calc(#{pfe-var(container-spacer)} / 2) ;\n  }\n\n  // At mobile if inside the main context, update the color to a text color\n  :host([is_nested]:not([parent_hidden])) & {\n    --pfe-navigation--Color: #{pfe-var(text)};\n\n    @each $prop in $BROADCAST-VARS {\n      --pfe-broadcasted--#{$prop}: #{pfe-local(Color, $region: tray)};\n    }\n\n    $accordion: pfe-accordion-variables;\n    @include pfe-print-local($accordion);\n    @include pfe-trigger;\n\n    box-sizing: border-box;\n    align-items: stretch;\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    $accordion: pfe-accordion-variables($state: expanded);\n    @include pfe-print-local($accordion);\n  }\n\n  :host([is_nested][last]:not(.expanded):not([parent_hidden])) & {\n    @include pfe-trigger-last;\n  }\n\n  // Chevron styles for the navigation accordion on mobile\n  &::after {\n    // closed:\n    :host([is_nested]:not(.expanded):not([parent_hidden])) & {\n      @include pfe-chevron($state: closed, $offset: 0px);\n    }\n    // open:\n    :host([is_nested].expanded:not([parent_hidden])) & {\n      @include pfe-chevron($state: open, $offset: 4px);\n    }\n    :host([is_nested]:not([parent_hidden])) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      border-color: pfe-local(Color);\n    }\n\n    :host([is_nested]:not([has_tray]):not([parent_hidden])) & {\n      transform: rotate(-45deg);\n    }\n  }\n\n  // The wind variant is used to render an icon with text inline, direct links\n  :host([variant=\"wind\"]) & {\n    --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} / 2) 0 calc(#{pfe-var(container-padding)} / 2) calc(#{pfe-var(container-spacer)} * 1.5);\n    --pfe-navigation--Color: pfe-var(link);\n    --pfe-navigation--BackgroundColor: transparent !important;\n\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: flex-start;\n\n    border: none;\n  }\n\n  pfe-icon {\n    --pfe-icon--Color: #{pfe-local(Color)};\n\n    :host([variant=\"wind\"]) & {\n      margin-bottom: 0;\n      margin-right: calc(#{pfe-var(container-spacer)} / 2);\n    }\n\n    &[icon=\"web-plus\"] {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n// Typography styles need specificity over bootstrap\n::slotted([slot=\"trigger\"]) {\n  @extend %trigger;\n  :host([pfe-icon]) & {\n    margin: 0.25em 0 0 0 !important;\n    max-width: 100px;\n  }\n}\n\n// Override bootstrap styles\n::slotted(*) {\n  font-size: inherit !important;\n  font-weight: #{pfe-local($cssvar: FontWeight, $fallback: #{$trigger--FontWeight--fallback})} !important;\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--FontWeight: #{pfe-var(text)};\n\n  @include pfe-set-broadcast-theme(light);\n\n  transition: all pfe-var(animation-timing);\n  box-sizing: border-box;\n\n  display: none;\n  visibility: hidden;\n\n  &[aria-expanded=\"true\"] {\n    display: block;\n    visibility: visible;\n  }\n\n  :host([show_links]:not([parent_hidden])) & {\n    flex-grow: 1;\n    display: flex;\n    visibility: visible;\n    width: 100%;\n    padding-right: 40px; // ensure gap between main menu links and utility links\n  }\n\n  :host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) &,\n  :host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) &,\n  :host([is_nested][parent_hidden]) & {\n    position: absolute;\n    top: 100%;\n    left: 0;\n\n    background-color: pfe-local(BackgroundColor, $region: tray);\n    color:            pfe-local(Color, $region: tray);\n    //mobile tray padding\n    padding: pfe-local(Padding, $region: tray);\n    width: 100%;\n    max-height: calc(100vh - #{pfe-local(Height)});\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding-right: 9px; // OFFSET SCROLLBAR HACK\n  }\n\n  //  Styles for the nested elements\n  :host([is_nested]:not([parent_hidden])) & {\n    @include pfe-collapsible($state: closed);\n    @include pfe-accordion-props;\n    @include pfe-box-sizing;\n    @include pfe-panel-container;\n     //mobile tray padding\n    padding: calc(#{pfe-local(Padding--vertical)} / 2)  calc(#{pfe-local(Padding--horizontal)} * 1.75);\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    $accordion: pfe-accordion-variables($state: expanded);\n    @include pfe-print-local($accordion);\n    @include pfe-panel-variables;\n    @include pfe-collapsible($state: open);\n  }\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  justify-content: center;\n}\n\n// Let the main item or the tray be hidden with the attribute\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n\n// Left-align text in accordions on mobile.\n:host([is_nested]) ::slotted([slot=\"trigger\"]) {\n  text-align: left;\n}\n\n:host([is_nested]) [slot=\"trigger\"] > a {\n  color: pfe-var(text) !important;\n}\n\n:host([pfe-icon=web-mobile-menu]) {\n  align-items: flex-end;\n  flex: 0 1 99%;//0 1 60%;\n}\n\n:host([is_nested][parent_hidden][pfe-full-width]) {\n  .pfe-navigation-item__tray {\n    padding: pfe-local(Padding, $region: tray) 0 pfe-local(Padding, $region: tray);\n  }\n}\n\n// @TODO set up tray opening animation?\n// :host(.animating) {\n//   transition: transform 0.3s #{pfe-var(animation-timing)};\n// }\n","%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: #{pfe-var(container-spacer)};\n}\n\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n",":host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: var(--pfe-theme--container-spacer, 16px);\n}\n\n::slotted([slot=\"trigger\"]) {\n  font-family: var(--pfe-theme--font-family, \"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif);\n  font-size: var(--pfe-navigation__trigger--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px)) !important;\n  font-weight: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  z-index: 2;\n  line-height: 1.1;\n  margin: 0 !important;\n  max-width: 100%;\n  text-align: center;\n}\n\n@media screen and (min-width: 0) {\n  ::slotted([slot=\"trigger\"]) {\n    max-width: 100%;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  ::slotted([slot=\"trigger\"]) {\n    max-width: 190px;\n  }\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  line-height: 1.2;\n  height: 100%;\n  min-width: var(--pfe-navigation--MinWidth, auto);\n}\n\n@media screen and (max-width: 1200px) {\n  :host {\n    width: 100%;\n  }\n}\n\n@media screen and (min-width: 500px) {\n  :host {\n    --pfe-navigation__trigger--Padding: var(--pfe-theme--container-padding, 16px);\n  }\n}\n\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n}\n\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--BorderTopColor:  var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n}\n\n:host([pfe-icon]) {\n  --pfe-navigation--MinWidth: 50px;\n  --pfe-navigation__trigger--FontSize: 12px;\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 16px) * .625);\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  flex: auto;\n  width: auto;\n  min-width: 65px;\n}\n\n@media screen and (min-width: 640px) {\n  :host([pfe-icon]) {\n    width: 70px;\n  }\n}\n\n@media screen and (max-height: 500px) {\n  :host([pfe-icon]) {\n    --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 16px) / 3) calc(var(--pfe-theme--container-padding, 16px) *.5);\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  :host([pfe-icon]) {\n    flex: auto;\n  }\n}\n\n:host(:not([pfe-icon])) {\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 16px) * .75);\n}\n\n:host(:not([has_tray])),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n:host([is_nested]:not([parent_hidden])) {\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  max-width: var(--pfe-navigation--Width, 100%);\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n  --pfe-theme--link--text-decoration: none;\n  --pfe-theme--link--text-decoration--hover: none;\n  --pfe-theme--link--text-decoration--focus: none;\n  --pfe-broadcasted--text: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--hover: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--focus: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--visited: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-theme--font-size--alpha: var(--pfe-navigation__trigger--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px));\n  --pfe-theme--font-weight--alpha: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  --pfe-theme--font-size--beta: var(--pfe-navigation__trigger--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px));\n  --pfe-theme--font-weight--beta: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  --pfe-theme--font-size--gamma: var(--pfe-navigation__trigger--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px));\n  --pfe-theme--font-weight--gamma: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  border-top: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderTopColor, transparent);\n  border-right: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor, transparent);\n  border-bottom: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor, transparent);\n  border-left: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor, transparent);\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  padding: var(--pfe-navigation__trigger--Padding, calc(var(--pfe-theme--container-padding, 16px) * .5));\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  outline: none;\n  cursor: pointer;\n}\n\n.pfe-navigation-item__trigger:hover {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation__trigger-icon--Visible: visible;\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation--Color: var(--pfe-theme--color--link--hover, #004080);\n}\n\n:host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-top-color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n@media screen and (min-width: 1200px) {\n  :host([has_tray]:not(.expanded)) .pfe-navigation-item__trigger:hover {\n    --pfe-navigation__trigger-icon--Visible: visible;\n  }\n}\n\n.pfe-navigation-item__trigger:focus {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation--BorderColor:    var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:focus {\n  --pfe-navigation--Color: var(--pfe-theme--color--link--focus, #004080);\n}\n\n:host(:not([pfe-icon])) .pfe-navigation-item__trigger::after {\n  display: block;\n  content: \" \";\n  visibility: var(--pfe-navigation__trigger-icon--Visible, hidden);\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  border-width: 6px 6px 0;\n  border-color: transparent;\n  border-top-color: var(--pfe-theme--color--feedback--default, #4f5255);\n  transform: rotate(0deg);\n  position: absolute;\n  bottom: calc(var(--pfe-theme--container-spacer, 16px) / 2);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-broadcasted--link: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-broadcasted--link-decoration: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-navigation--pfe-accordion-variables: ;\n  --pfe-navigation--BorderBottomWidth: 0;\n  --pfe-navigation--ZIndex: 3;\n  --pfe-navigation__trigger--Padding: var(--pfe-navigation__base--Padding) 50px var(--pfe-navigation__base--Padding) calc(var(--pfe-navigation__base--Padding) * 1.5);\n  margin: 0;\n  width: var(--pfe-navigation--Width, 100%);\n  max-width: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  height: auto;\n  position: relative;\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  border: 0 var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderColor, transparent);\n  border-top-width: var(--pfe-navigation--BorderTopWidth);\n  border-right-width: var(--pfe-navigation--BorderRightWidth);\n  border-bottom-width: var(--pfe-navigation--BorderBottomWidth);\n  border-left: var(--pfe-navigation--BorderLeftWidth) var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderColor--accent);\n  box-shadow: var(--pfe-navigation--BoxShadow);\n  z-index: var(--pfe-navigation--ZIndex);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--pfe-navigation--FontSize--header, calc(var(--pfe-theme--font-size, 16px) * 1.1));\n  font-weight: var(--pfe-theme--font-weight--bold, 700);\n  text-align: var(--pfe-navigation--TextAlign, left);\n  line-height: var(--pfe-theme--line-height, 1.5);\n  padding: var(--pfe-navigation__trigger--Padding, calc(var(--pfe-theme--container-padding, 16px) * .5));\n  box-sizing: border-box;\n  align-items: stretch;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover {\n  outline: none;\n  border-left-width: var(--pfe-theme--surface--border-width--heavy, 4px);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:focus {\n  outline: none;\n  text-decoration: underline;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::-moz-focus-inner {\n  border: 0;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderRightWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderLeftWidth: var(--pfe-theme--surface--border-width--heavy, 4px);\n  --pfe-navigation--BackgroundColor: white;\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  --pfe-navigation--ZIndex: 3;\n}\n\n:host([is_nested][last]:not(.expanded):not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--BorderBottomWidth: var(--pfe-theme--surface--border-width, 1px);\n}\n\n:host([is_nested]:not(.expanded):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 16px) + 0px);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.4em;\n  width: 0.4em;\n  transition: transform 0.15s;\n  border-width: 0 .1em .1em 0;\n  transform: rotate(45deg);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.3125);\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 16px) + 4px);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.4em;\n  width: 0.4em;\n  transition: transform 0.15s;\n  border-width: .1em .1em 0 0;\n  border-bottom: 0;\n  transform: rotate(-45deg);\n  top: calc(var(--pfe-theme--container-spacer, 16px) + 4px);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.3125);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n:host([is_nested]:not([has_tray]):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  transform: rotate(-45deg);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger {\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 16px) / 2) 0 calc(var(--pfe-theme--container-padding, 16px) / 2) calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n  --pfe-navigation--Color: pfe-var(link);\n  --pfe-navigation--BackgroundColor: transparent !important;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: flex-start;\n  border: none;\n}\n\n.pfe-navigation-item__trigger pfe-icon {\n  --pfe-icon--Color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger pfe-icon {\n  margin-bottom: 0;\n  margin-right: calc(var(--pfe-theme--container-spacer, 16px) / 2);\n}\n\n.pfe-navigation-item__trigger pfe-icon[icon=\"web-plus\"] {\n  transform: rotate(-45deg);\n}\n\n:host([pfe-icon]) ::slotted([slot=\"trigger\"]) {\n  margin: 0.25em 0 0 0 !important;\n  max-width: 100px;\n}\n\n::slotted(*) {\n  font-size: inherit !important;\n  font-weight: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300)) !important;\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--FontWeight: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  box-sizing: border-box;\n  display: none;\n  visibility: hidden;\n}\n\n.pfe-navigation-item__tray[aria-expanded=\"true\"] {\n  display: block;\n  visibility: visible;\n}\n\n:host([show_links]:not([parent_hidden])) .pfe-navigation-item__tray {\n  flex-grow: 1;\n  display: flex;\n  visibility: visible;\n  width: 100%;\n  padding-right: 40px;\n}\n\n:host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) .pfe-navigation-item__tray,\n:host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) .pfe-navigation-item__tray,\n:host([is_nested][parent_hidden]) .pfe-navigation-item__tray {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  background-color: var(--pfe-navigation__tray--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n  color: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  padding: var(--pfe-navigation__tray--Padding);\n  width: 100%;\n  max-height: calc(100vh - var(--pfe-navigation--Height, 84px));\n  overflow-x: hidden;\n  overflow-y: scroll;\n  padding-right: 9px;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  display: none;\n  overflow: hidden;\n  will-change: height;\n  border-color: transparent;\n  opacity: 0;\n  margin: 0;\n  width: var(--pfe-navigation--Width, 100%);\n  max-width: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  height: auto;\n  position: relative;\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  border: 0 var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderColor, transparent);\n  border-top-width: var(--pfe-navigation--BorderTopWidth);\n  border-right-width: var(--pfe-navigation--BorderRightWidth);\n  border-bottom-width: var(--pfe-navigation--BorderBottomWidth);\n  border-left: var(--pfe-navigation--BorderLeftWidth) var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderColor--accent);\n  box-shadow: var(--pfe-navigation--BoxShadow);\n  z-index: var(--pfe-navigation--ZIndex);\n  --pfe-navigation--BoxShadow: none;\n  padding: var(--pfe-navigation__panel-container--Padding);\n  padding: calc(var(--pfe-navigation--Padding--vertical) / 2) calc(var(--pfe-navigation--Padding--horizontal) * 1.75);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray:hover {\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *::before, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *::after {\n  box-sizing: border-box;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__tray {\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderRightWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderLeftWidth: var(--pfe-theme--surface--border-width--heavy, 4px);\n  --pfe-navigation--BackgroundColor: white;\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  --pfe-navigation--ZIndex: 3;\n  --pfe-navigation--BorderTopWidth: 0;\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  display: block;\n  position: relative;\n  opacity: 1;\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  justify-content: center;\n}\n\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n\n:host([is_nested]) ::slotted([slot=\"trigger\"]) {\n  text-align: left;\n}\n\n:host([is_nested]) [slot=\"trigger\"] > a {\n  color: var(--pfe-theme--color--text, #151515) !important;\n}\n\n:host([pfe-icon=\"web-mobile-menu\"]) {\n  align-items: flex-end;\n  flex: 0 1 99%;\n}\n\n:host([is_nested][parent_hidden][pfe-full-width]) .pfe-navigation-item__tray {\n  padding: var(--pfe-navigation__tray--Padding) 0 var(--pfe-navigation__tray--Padding);\n}\n","@import \"../../pfe-sass/pfe-sass\";\n\n$overlay--BackgroundColor--fallback: rgba(37, 37, 37, 0.5);\n\n$trigger--FontSize--fallback:   #{pfe-var(font-size--heading--epsilon)};\n$trigger--FontWeight--fallback: #{pfe-var(font-weight--light)};\n$trigger--Color--fallback: #{pfe-var(text--on-dark)};\n\n$LOCAL: navigation;\n$LOCAL-VARIABLES: (\n// Supplemental breakpoints,   \n// Usage:  @media screen and (min-width: pfe-breakpoint(lg-mobile, $map: false)) { \n\n//  grid-breakpoint--xs:           0,\n    sm-mobile:                     500px,\n//  grid-breakpoint--sm:           576px,\n    lg-mobile:                     640px,\n//  grid-breakpoint--md:           768px,\n//  grid-breakpoint--lg:           992px,\n    sm-desktop:                    1024px,\n//  grid-breakpoint--xl:           1200px,\n);\n\n// turn on automatic fallbacks for broadcasted variables\n\n// -- Typography\n%link-styles {\n    color: pfe-broadcasted(link);\n    text-decoration: pfe-broadcasted(link-decoration);\n    &:visited {\n        color: pfe-broadcasted(link--visited);\n    }\n    &:hover {\n        color: pfe-broadcasted(link--hover);\n        text-decoration: pfe-broadcasted(link-decoration--hover);\n    }\n    &:focus {\n        outline-offset: 1px;\n        outline-style: dotted;\n        outline-width: 1px;\n        outline-color: pfe-broadcasted(link--focus);\n        color: pfe-broadcasted(link--focus);\n    }\n}\n\n%trigger {\n    font-family: pfe-var(font-family);\n    font-size: pfe-local(FontSize, $region: trigger, $fallback: $trigger--FontSize--fallback) !important;\n    font-weight: pfe-local(FontWeight, $fallback: $trigger--FontWeight--fallback);\n    color: pfe-local(Color, $fallback: $trigger--Color--fallback);\n    z-index: 2;\n    line-height: 1.1;\n    margin: 0 !important;\n    max-width: 100%; // added\n    text-align: center;\n\n    @media screen and (min-width: pfe-breakpoint(xs) ) {\n        max-width: 100%;\n    }\n    @media screen and (min-width: pfe-breakpoint(xl) ) {\n        max-width: 190px;\n    }\n}","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not pfe-broadcasted(#{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    --#{$repo}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context})};\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n    @each $property, $value in $map {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-print-local((\n                BackgroundColor: pfe-var(surface--#{$color}),\n                theme: pfe-var(surface--#{$color}--theme, #{$theme})\n            ));\n            @extend %fallback-surface;\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n    }\n    @if $ie-fallback {\n        :host {\n            @extend %fallback-text;\n        }\n    }\n}\n","/// ===========================================================================\n/// Accordion-specific SASS Vars\n/// ===========================================================================\n\n@function pfe-accordion-variables($state: default, $theme: default, $variant: default) {\n  // Shared variables for all themes\n  $accordion-styles: ();\n\n  @if $state != expanded { // Default state\n    // Shared variables for all themes\n    $accordion-styles: (\n      BorderColor--accent: transparent,\n      BorderColor:         pfe-var(surface--border),\n      BorderTopWidth:      pfe-var(surface--border-width),\n      BorderRightWidth:    0,\n      BorderBottomWidth:   pfe-var(surface--border-width),\n      BorderLeftWidth:     pfe-var(surface--border-width--heavy),\n      Color:               pfe-broadcasted(text),\n      TextAlign:           left,\n      accent: pfe-var(ui-accent),\n      base: (\n        Padding:         pfe-var(container-spacer)\n      )\n    );\n\n    @if $theme == dark { // Dark theme\n      $accordion-styles: (\n        accent: pfe-var(ui-accent--on-dark)\n      );\n    }\n    @else if $theme == saturated { // Saturated theme\n      $accordion-styles: (\n        accent: pfe-var(ui-accent--on-saturated)\n      );\n    }\n\n    @if $variant == disclosure {\n      $accordion-styles: (\n        BorderRightWidth: pfe-var(surface--border-width),\n        BorderLeftWidth: pfe-var(surface--border-width),\n        BorderColor--accent: pfe-var(surface--border)\n      );\n    }\n  }\n  @else { // Expanded state\n    // Shared variables for all themes\n    $accordion-styles: (\n      BorderColor:         pfe-var(surface--border),\n      BorderRightWidth:    pfe-var(surface--border-width),\n      BorderLeftWidth:     pfe-var(surface--border-width--heavy),\n      // Defaults for light theme\n      BackgroundColor:     rgba(255, 255, 255, 1),\n      Color:               pfe-var(text),\n      BorderColor--accent: pfe-local(accent),\n      BoxShadow: 0 5px pfe-var(surface--border-width--heavy) rgba(140, 140, 140, 0.35),\n      ZIndex: 3\n    );\n\n    @if $theme == dark { // Dark theme\n      $accordion-styles: (\n        BackgroundColor:    rgba(247, 247, 249, .1),\n        Color:               pfe-broadcasted(text),\n        BorderColor--accent: pfe-var(ui-accent--on-dark),\n        BoxShadow: none\n      );\n    }\n    @else if $theme == saturated { // Saturated theme\n      $accordion-styles: (\n        BackgroundColor:    rgba(0, 0, 0, 0.2),\n        Color:               pfe-broadcasted(text),\n        BorderColor--accent: pfe-var(ui-accent--on-saturated),\n        BoxShadow: none\n      );\n    }\n    \n    @if $variant == disclosure {\n      $accordion-styles: (\n        BorderLeftWidth: pfe-var(surface--border-width--heavy),\n        BorderColor--accent: pfe-var(ui-accent)\n      );\n    }\n  }\n\n  @return $accordion-styles;\n}\n\n@mixin pfe-accordion-props($variant: default) {\n  margin: 0;\n  width: pfe-local(Width, 100%);\n  max-width: calc(100% - #{pfe-var(surface--border-width--heavy)});\n  height: auto;\n  position: relative;\n\n  // Since the default bg color is transparent, look to broadcast values\n  background-color: pfe-local(BackgroundColor, transparent);\n  color:            pfe-local(Color);\n\n  // Border settings\n  border: 0 pfe-var(surface--border-style) pfe-local(BorderColor);\n  border-top-width:     pfe-local(BorderTopWidth);\n  border-right-width:   pfe-local(BorderRightWidth);\n  border-bottom-width:  pfe-local(BorderBottomWidth);\n  border-left: pfe-local(BorderLeftWidth) pfe-var(surface--border-style) pfe-local(BorderColor--accent);\n\n  box-shadow: pfe-local(BoxShadow);\n  z-index: pfe-local(ZIndex);\n\n  &:hover {\n    @include pfe-print-local((\n      BorderColor--accent: pfe-local(accent)\n    ));\n  }\n}\n\n//-- Trigger-specific properties\n@mixin pfe-trigger {\n  $chevron--spacing: 50px;\n\n  $LOCAL-VARIABLES: (\n    BorderBottomWidth: 0,\n    ZIndex: 3,\n    trigger: (\n      Padding: pfe-local(Padding, $region: base) $chevron--spacing pfe-local(Padding, $region: base) calc(#{pfe-local(Padding, $region: base)} * 1.5)\n    )\n  );\n\n  @include pfe-print-local($LOCAL-VARIABLES);\n  @include pfe-accordion-props;\n\n  // -webkit-appearance: button;\n  cursor: pointer;\n\n  font-family: inherit;\n  font-size:   pfe-local(FontSize--header, calc(#{pfe-var(font-size)} * 1.1));\n  font-weight: pfe-var(font-weight--bold);\n  text-align:  pfe-local(TextAlign, left);\n  line-height: pfe-var(line-height);\n  padding:     pfe-local(Padding, $region: trigger);\n\n  &:hover {\n    outline: none;\n    border-left-width: pfe-var(surface--border-width--heavy);\n  }\n\n  &:focus {\n      outline: none;\n      text-decoration: underline;\n  }\n\n  &::-moz-focus-inner {\n      border: 0;\n  }\n}\n\n@mixin pfe-trigger-last($theme: light) {\n  @include pfe-print-local((\n    BorderBottomWidth: pfe-var(surface--border-width)\n  ));\n}\n\n//-- Panel-specific properties\n@mixin pfe-panel-variables($theme: light) {\n  $LOCAL-VARIABLES: (\n    BorderTopWidth: 0\n  );\n\n  @if $theme == \"light\" { // Light theme\n    $LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n      BoxShadow: 0 5px pfe-var(surface--border-width--heavy) rgba(140, 140, 140, 0.35)\n    ));\n  }\n  @else {\n    $LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n      BoxShadow: none\n    ));\n  }\n\n  @include pfe-print-local($LOCAL-VARIABLES);\n}\n\n@mixin pfe-panel-container() {\n  // Ensure the box shadow does not propagate to nest accordions\n  @include pfe-print-local( ( BoxShadow: none ) );\n\n  @extend %container;\n  padding: pfe-local(Padding, $region: panel-container);\n}\n\n/// ===========================================================================\n/// Accordion chevrons\n/// ===========================================================================\n\n@mixin pfe-chevron($state: open, $position: after, $size: .4em, $offset: $size) {\n\n  content: \"\";\n  position: absolute;\n  top: calc(#{pfe-var(container-spacer)} + #{$offset});\n\n  display: block;\n  border-style: pfe-var(surface--border-style);\n  height: $size;\n  width:  $size;\n  transition: transform 0.15s;\n  @if $state == open {\n    border-width: .1em .1em 0 0;\n    border-bottom: 0;\n    transform: rotate(-45deg);\n    top: calc(#{pfe-var(container-spacer)} + #{$offset});\n    @if $position == before {\n      left: calc(#{pfe-var(container-spacer)} * 1.3125); // 21px\n      top: calc(#{pfe-var(container-spacer)} + .25em);\n      transform: rotate(135deg);\n    }\n    @else {\n      right: calc(#{pfe-var(container-spacer)} * 1.3125);\n    }\n  }\n  @else {\n    border-width: 0 .1em .1em 0;\n    transform: rotate(45deg);\n    @if $position == before {\n      left: calc(#{pfe-var(container-spacer)} * 1.3125);\n      transform: rotate(-45deg);\n    }\n    @else {\n      right: calc(#{pfe-var(container-spacer)} * 1.3125);\n    }\n  }\n}","// $boxSize = any box-sizing property, default is border-box\n@mixin pfe-box-sizing($boxSize: border-box) {\n  *, *::before, *::after {\n    box-sizing: $boxSize;\n  }\n}\n\n@mixin pfe-clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n@mixin pfe-container {\n  @extend %container;\n\n  padding: calc(#{pfe-local(Padding--vertical)} / 2)  #{pfe-local(Padding--horizontal)};\n\n  @media (min-width: #{pfe-breakpoint(sm)}) {\n    padding: #{pfe-local(Padding)};\n  }\n}\n  \n@mixin pfe-collapsible($state: closed) {\n    @if $state != closed {\n        display: block;\n        position: relative;\n        opacity: 1;\n    }\n    @else {\n        display: none;\n        overflow: hidden;\n        will-change: height;\n        border-color: transparent;\n        opacity: 0;\n    }\n}\n"]}