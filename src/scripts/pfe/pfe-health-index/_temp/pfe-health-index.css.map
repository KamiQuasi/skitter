{"version":3,"sources":["../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/extends/_extends.scss","pfe-health-index.css","pfe-health-index.scss","../../pfe-sass/functions/_custom-properties.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss"],"names":[],"mappings":"AAGM;EC8NE;ID9NoF,UAAA;IE2CxF,yBAAiC;EC1CnC;AACF;;AFuNQ;EAtJY,qEAAgD;EAAhD,wEAAgD;EAAhD,sFAAgD;EAAhD,sFAAgD;EAAhD,0FAAgD;EAAhD,oFAAgD;EAAhD,uGAAgD;EAAhD,uGAAgD;EAAhD,sGAAgD;AErDpE;;AF2MQ;EAtJY,0EAAgD;EAAhD,0EAAgD;EAAhD,2FAAgD;EAAhD,2FAAgD;EAAhD,+FAAgD;EAAhD,8FAAgD;EAAhD,4GAAgD;EAAhD,4GAAgD;EAAhD,gHAAgD;AEzCpE;;AF+LQ;EAtJY,+DAAgD;EAAhD,4DAAgD;EAAhD,6EAAgD;EAAhD,6EAAgD;EAAhD,iFAAgD;EAAhD,2EAAgD;EAAhD,8FAAgD;EAAhD,8FAAgD;EAAhD,6FAAgD;AE7BpE;;ACbA;EACE,2BAAoB;EAApB,4BAAoB;EAApB,2BAAoB;EAApB,oBAAoB;EACpB,yBAAmB;EAAnB,2BAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;ADgBrB;;ACbA;EACE,aAAa;ADgBf;;ACbA;EH6EY,mCAA+B;EAA/B,8EAA+B;AE3D3C;;AClBA;EH6EY,mCAA+B;EAA/B,8EAA+B;AEtD3C;;ACvBA;EH6EY,mCAA+B;EAA/B,8EAA+B;AEjD3C;;AC5BA;EH6EY,mCAA+B;EAA/B,8EAA+B;AE5C3C;;ACjCA;EH6EY,mCAA+B;EAA/B,8EAA+B;AEvC3C;;ACtCA;EH6EY,mCAA+B;EAA/B,8EAA+B;AElC3C;;ACjCE;EACE,sBCNgC;EDMhC,kECNgC;EDOhC,qBAA8C;EAA9C,0DAA8C;EAC9C,YCRgC;EDQhC,iDCRgC;EDShC,+BCTgC;EDShC,iJCTgC;AF6CpC;;ACxCE;EAOI,eAAe;ADqCrB;;AC5CE;EAWI,iDCyE8B;AFpCpC;;AH5FM;EI4CJ;IJ5C0F,UAAA;EGiG1F;ECrDA;IAgBU,yBAzDA;EDiGV;ECxDA;IAgBU,yBAxDA;EDmGV;EC3DA;IAgBU,yBAvDA;EDqGV;EC9DA;IAgBU,yBAtDA;EDuGV;ECjEA;IAgBU,yBArDA;EDyGV;ECpEA;IAgBU,yBApDA;ED2GV;AACF;;AChDE;EACE,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,WC/BgC;ED+BhC,gDC/BgC;EDgChC,YChCgC;EDgChC,iDChCgC;EDiChC,wBAAuB;EAAvB,+BAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,yBAAmB;EAAnB,2BAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,cAAc;EACd,kBCpCgC;EDoChC,uDCpCgC;EDsChC,iDCmDgC;EDlDhC,4CCkDgC;AFApC;;AHhIM;EIoEJ;IJpE0F,UAAA;EGqI1F;ECjEA;IAeQ,yBAhFE;IAiFF,WEP2B;EH4DnC;ECrEA;IAeQ,yBA/EE;IAgFF,WEP2B;EHgEnC;ECzEA;IAeQ,yBA9EE;IA+EF,WEP2B;EHoEnC;EC7EA;IAeQ,yBA7EE;IA8EF,WEP2B;EHwEnC;ECjFA;IAeQ,yBA5EE;IA6EF,WEP2B;EH4EnC;ECrFA;IAeQ,yBA3EE;IA4EF,WEP2B;EHgFnC;AACF;;ACnEE;EACE,sBCrDgC;EDqDhC,kECrDgC;EDsDhC,cCtDgC;EDsDhC,0DCtDgC;EDuDhC,uCCvDgC;EDuDhC,mKCvDgC;AF6HpC;;ACzEE;EAMI,cAAc;EACd,wCC3D8B;ED2D9B,oKC3D8B;AFkIpC;;AC9EE;EAWI,iBAAiB;ADuEvB;;AClFE;EAeI,eAAe;EACf,yCCpE8B;EDoE9B,qKCpE8B;AF2IpC;;ACvFE;EAoBI,eAAe;ADuErB;;AC3FE;EAwBI,YAAY;EACZ,cAAc;ADuEpB;;AChGE;EA8BI,2BAAoD;EAApD,gEAAoD;ADsE1D;;ACpGE;EAkCI,oCAA2D;EAA3D,wEAA2D;EAC3D,iBAAiB;ADsEvB;;ACzGE;;EAwCI,iDCH8B;EDI9B,4CCJ8B;AF0EpC;;AH1MM;EI2FJ;IJ3F0F,UAAA;EG+M1F;ECpHA;;IAgDQ,yBAxIE;IAyIF,WE/D2B;EHuInC;ECzHA;;IAgDQ,yBAvIE;IAwIF,WE/D2B;EH4InC;EC9HA;;IAgDQ,yBAtIE;IAuIF,WE/D2B;EHiJnC;ECnIA;;IAgDQ,yBArIE;IAsIF,WE/D2B;EHsJnC;ECxIA;;IAgDQ,yBApIE;IAqIF,WE/D2B;EH2JnC;EC7IA;;IAgDQ,yBAnIE;IAoIF,WE/D2B;EHgKnC;AACF;;AC5FI;EACE,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;AD+FnB;;AC7FI;EACE,yBC/G8B;ED+G9B,2IC/G8B;EDgH9B,6BAAqD;EAArD,iEAAqD;ADgG3D;;AC9FI;EACE,YAAY;ADiGlB;;AC/FI;EACE,SAAS;ADkGf;;AChGI;EACE,cAAc;ADmGpB","file":"pfe-health-index.css","sourcesContent":["@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not pfe-broadcasted(#{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    --#{$repo}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context})};\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n    @each $property, $value in $map {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-print-local((\n                BackgroundColor: pfe-var(surface--#{$color}),\n                theme: pfe-var(surface--#{$color}--theme, #{$theme})\n            ));\n            @extend %fallback-surface;\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n    }\n    @if $ie-fallback {\n        :host {\n            @extend %fallback-text;\n        }\n    }\n}\n","%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: #{pfe-var(container-spacer)};\n}\n\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    color: #151515 !important;\n  }\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, #fafafa);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, #fafafa);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #8476d1);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-saturated, underline);\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n}\n\n:host {\n  display: inline-flex;\n  align-items: center;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.box.a {\n  --pfe-health-index--accent: #3f9c35;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.box.b {\n  --pfe-health-index--accent: #92d400;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.box.c {\n  --pfe-health-index--accent: #efaa00;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.box.d {\n  --pfe-health-index--accent: #ec7a08;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.box.e {\n  --pfe-health-index--accent: #cc0000;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.box.f {\n  --pfe-health-index--accent: #523333;\n  --pfe-health-index--accent--text: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n:host(:not([size=\"lg\"]):not([size=\"mini\"])) .box {\n  background-color: var(--pfe-theme--color--surface--lightest, #fff);\n  width: calc(var(--pfe-theme--ui--element--size, 20px) / 2);\n  height: var(--pfe-theme--ui--element--size, 20px);\n  border-right: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host(:not([size=\"lg\"]):not([size=\"mini\"])) .box:last-child {\n  border-right: 0;\n}\n\n:host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active {\n  background-color: var(--pfe-health-index--accent);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active {\n    /* IE10+ */\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.a {\n    background-color: #3f9c35;\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.b {\n    background-color: #92d400;\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.c {\n    background-color: #efaa00;\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.d {\n    background-color: #ec7a08;\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.e {\n    background-color: #cc0000;\n  }\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) .box.active.f {\n    background-color: #523333;\n  }\n}\n\n:host([size=\"mini\"]) .box {\n  display: flex;\n  width: var(--pfe-theme--ui--element--size, 20px);\n  height: var(--pfe-theme--ui--element--size, 20px);\n  justify-content: center;\n  align-items: center;\n  font-size: 1em;\n  border-radius: var(--pfe-theme--ui--border-radius, 2px);\n  background-color: var(--pfe-health-index--accent);\n  color: var(--pfe-health-index--accent--text);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"mini\"]) .box {\n    /* IE10+ */\n  }\n  :host([size=\"mini\"]) .box.a {\n    background-color: #3f9c35;\n    color: #fff;\n  }\n  :host([size=\"mini\"]) .box.b {\n    background-color: #92d400;\n    color: #fff;\n  }\n  :host([size=\"mini\"]) .box.c {\n    background-color: #efaa00;\n    color: #fff;\n  }\n  :host([size=\"mini\"]) .box.d {\n    background-color: #ec7a08;\n    color: #fff;\n  }\n  :host([size=\"mini\"]) .box.e {\n    background-color: #cc0000;\n    color: #fff;\n  }\n  :host([size=\"mini\"]) .box.f {\n    background-color: #523333;\n    color: #fff;\n  }\n}\n\n:host([size=\"lg\"]) .box {\n  background-color: var(--pfe-theme--color--surface--lightest, #fff);\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n  border-top: calc(var(--pfe-theme--ui--border-width, 1px) * 2) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border--lightest, #f5f5f5);\n}\n\n:host([size=\"lg\"]) .box:first-child {\n  margin-left: 0;\n  border-left: calc(var(--pfe-theme--ui--border-width, 1px) * 2) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border--lightest, #f5f5f5);\n}\n\n:host([size=\"lg\"]) .box.active:first-child {\n  border-left: none;\n}\n\n:host([size=\"lg\"]) .box:last-child {\n  margin-right: 0;\n  border-right: calc(var(--pfe-theme--ui--border-width, 1px) * 2) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border--lightest, #f5f5f5);\n}\n\n:host([size=\"lg\"]) .box.active:last-child {\n  border-right: 0;\n}\n\n:host([size=\"lg\"]) .box > .bottom {\n  height: .5em;\n  margin: 0 .5px;\n}\n\n:host([size=\"lg\"]) .box .grade {\n  padding: 6px calc(var(--pfe-theme--ui--element--size, 20px) / 2);\n}\n\n:host([size=\"lg\"]) .box.active .grade {\n  margin: calc(var(--pfe-theme--ui--border-width, 1px) * -2) 0.5px 0 0.5px;\n  padding-top: .5em;\n}\n\n:host([size=\"lg\"]) .box > .bottom,\n:host([size=\"lg\"]) .box.active .grade {\n  background-color: var(--pfe-health-index--accent);\n  color: var(--pfe-health-index--accent--text);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"lg\"]) .box {\n    /* IE10+ */\n  }\n  :host([size=\"lg\"]) .box.a > .bottom,\n  :host([size=\"lg\"]) .box.active.a .grade {\n    background-color: #3f9c35;\n    color: #fff;\n  }\n  :host([size=\"lg\"]) .box.b > .bottom,\n  :host([size=\"lg\"]) .box.active.b .grade {\n    background-color: #92d400;\n    color: #fff;\n  }\n  :host([size=\"lg\"]) .box.c > .bottom,\n  :host([size=\"lg\"]) .box.active.c .grade {\n    background-color: #efaa00;\n    color: #fff;\n  }\n  :host([size=\"lg\"]) .box.d > .bottom,\n  :host([size=\"lg\"]) .box.active.d .grade {\n    background-color: #ec7a08;\n    color: #fff;\n  }\n  :host([size=\"lg\"]) .box.e > .bottom,\n  :host([size=\"lg\"]) .box.active.e .grade {\n    background-color: #cc0000;\n    color: #fff;\n  }\n  :host([size=\"lg\"]) .box.f > .bottom,\n  :host([size=\"lg\"]) .box.active.f .grade {\n    background-color: #523333;\n    color: #fff;\n  }\n}\n\n:host(:not([size=\"mini\"])) .box-container {\n  display: flex;\n}\n\n:host(:not([size=\"lg\"]):not([size=\"mini\"])) .box-container {\n  border: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  margin-left: calc(var(--pfe-theme--container-spacer, 16px) * 0.5);\n}\n\n:host([size=\"mini\"], [size=\"lg\"]) .box-container {\n  border: none;\n}\n\n:host([size=\"mini\"]) .box-container {\n  margin: 0;\n}\n\n:host([size=\"lg\"]) .box-container {\n  margin-left: 0;\n}\n","@import \"../../pfe-sass/pfe-sass\";\n@include pfe-theme-contexts; // imports on=\"light\" etc support\n\n$LOCAL: health-index;\n\n$colors: (\n  a: #3f9c35,\n  b: #92d400,\n  c: #efaa00,\n  d: #ec7a08,\n  e: #cc0000,\n  f: #523333\n);\n\n// TODO: Migrate to theme values?\n// $colors: (\n//   a: pfe-var(feedback--success--darkest),\n//   b: pfe-var(feedback--success),\n//   c: pfe-var(feedback--moderate),\n//   d: pfe-var(feedback--moderate--darkest),\n//   e: pfe-var(feedback--critical),\n//   f: pfe-var(feedback--critical--darkest)\n// );\n\n/// ===========================================================================\n/// WHATEVER\n/// ===========================================================================\n\n:host {\n  display: inline-flex;\n  align-items: center;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.box {\n  @each $level in (a b c d e f) {\n    &.#{$level} {\n      @include pfe-print-local((\n        accent: map-get($colors, $level),\n        accent--text: pfe-var(text--on-dark)\n      ));\n    }\n  }\n\n  :host(:not([size=\"lg\"]):not([size=\"mini\"])) & {\n    background-color: pfe-var(surface--lightest);\n    width: calc(#{pfe-var(ui--element--size)} / 2);\n    height: pfe-var(ui--element--size);\n    border-right: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n\n    &:last-child {\n      border-right: 0;\n    }\n\n    &.active {\n      background-color: pfe-local(accent);\n\n      @include browser-query(ie11) {\n        @each $level in (a b c d e f) {\n          &.#{$level} {\n            background-color: map-get($colors, $level);\n          }\n        }\n      }\n\n    }\n  }\n\n  :host([size=\"mini\"]) & {\n    display: flex;\n    width: pfe-var(ui--element--size);\n    height: pfe-var(ui--element--size);\n    justify-content: center;\n    align-items: center;\n    font-size: 1em;\n    border-radius: pfe-var(ui--border-radius);\n    // Color applied to the background\n    background-color: pfe-local(accent);\n    color: pfe-local(accent--text);\n\n    @include browser-query(ie11) {\n      @each $level in (a b c d e f) {\n        &.#{$level} {\n          background-color: map-get($colors, $level);\n          color: pfe-fetch(text--on-dark);\n        }\n      }\n    }\n\n  }\n\n  :host([size=\"lg\"]) & {\n    background-color: pfe-var(surface--lightest);\n    color: pfe-var(ui-disabled--text);\n    border-top: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);\n\n    &:first-child {\n      margin-left: 0;\n      border-left: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);\n    }\n\n    &.active:first-child {\n      border-left: none;\n    }\n\n    &:last-child {\n      margin-right: 0;\n      border-right: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);\n    }\n\n    &.active:last-child {\n      border-right: 0;\n    }\n\n    & > .bottom {\n      height: .5em;\n      margin: 0 .5px;\n    }\n\n    .grade {\n      // TODO: What is the 6px value's relationship to the other design elements?\n      padding: 6px calc(#{pfe-var(ui--element--size)} / 2);\n    }\n\n    &.active .grade {\n      margin: calc(#{pfe-var(ui--border-width)} * -2) .5px 0 .5px;\n      padding-top: .5em;\n    }\n\n    & > .bottom,\n    &.active .grade {\n      background-color: pfe-local(accent);\n      color: pfe-local(accent--text);\n    }\n\n    @include browser-query(ie11) {\n      @each $level in (a b c d e f) {\n        &.#{$level} > .bottom,\n        &.active.#{$level} .grade {\n          background-color: map-get($colors, $level);\n          color: pfe-fetch(text--on-dark);\n        }\n      }\n    }\n  }\n  &-container {\n    :host(:not([size=\"mini\"])) & {\n      display: flex;\n    }\n    :host(:not([size=\"lg\"]):not([size=\"mini\"])) & {\n      border: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);\n      margin-left: calc(#{pfe-var(container-spacer)} * 0.5);\n    }\n    :host([size=\"mini\"],[size=\"lg\"]) & {\n      border: none;  \n    }\n    :host([size=\"mini\"]) & {\n      margin: 0;\n    }\n    :host([size=\"lg\"]) & {\n      margin-left: 0;\n    }\n  }\n}\n","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n"]}