{"version":3,"sources":["../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/extends/_extends.scss","pfe-card.css","pfe-card.scss","../../pfe-sass/functions/_custom-properties.scss","../../pfe-sass/maps/_general.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss"],"names":[],"mappings":"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","file":"pfe-card.css","sourcesContent":["@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not pfe-broadcasted(#{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    --#{$repo}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context})};\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n    @each $property, $value in $map {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-print-local((\n                BackgroundColor: pfe-var(surface--#{$color}),\n                theme: pfe-var(surface--#{$color}--theme, #{$theme})\n            ));\n            @extend %fallback-surface;\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n    }\n    @if $ie-fallback {\n        :host {\n            @extend %fallback-text;\n        }\n    }\n}\n","%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: #{pfe-var(container-spacer)};\n}\n\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([pfe-color=\"darker\"]), :host([pfe-color=\"darkest\"]), :host([pfe-color=\"base\"]), :host([pfe-color=\"lightest\"]), :host([pfe-color=\"accent\"]), :host([pfe-color=\"complement\"]) {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: #151515 !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    color: #151515 !important;\n  }\n}\n\n:host {\n  --theme: var(--pfe-card--theme, var(--pfe-theme--color--surface--base--theme, light));\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  align-self: stretch;\n  padding: var(--pfe-card--Padding, var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 16px) * 2)) var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2)) var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2)) var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2)));\n  border: var(--pfe-card--Border, var(--pfe-card--BorderWidth, 0) var(--pfe-card--BorderStyle, solid) var(--pfe-card--BorderColor, var(--pfe-theme--color--surface--border, #d2d2d2)));\n  border-radius: var(--pfe-card--BorderRadius, var(--pfe-theme--surface--border-radius, 3px));\n  overflow: hidden;\n  background-color: var(--pfe-card--BackgroundColor, var(--pfe-theme--color--surface--base, #f0f0f0));\n  background-position: var(--pfe-card--BackgroundPosition, center center);\n  color: var(--pfe-broadcasted--text, #3c3f42);\n}\n\n@media print {\n  :host {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@media print {\n  :host {\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    background-color: var(--pfe-theme--color--surface--lightest, #fff) !important;\n    color: var(--pfe-theme--color--text, #151515) !important;\n    background-image: none !important;\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n    padding: var(--pfe-theme--container-spacer, 16px);\n  }\n}\n\n:host([pfe-color=\"darker\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darker, #3c3f42);\n  --pfe-card--theme: var(--pfe-theme--color--surface--darker--theme, dark);\n}\n\n:host([pfe-color=\"darkest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-card--theme: var(--pfe-theme--color--surface--darkest--theme, dark);\n}\n\n:host([pfe-color=\"base\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--base, #f0f0f0);\n  --pfe-card--theme: var(--pfe-theme--color--surface--base--theme, light);\n}\n\n:host([pfe-color=\"lightest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-card--theme: var(--pfe-theme--color--surface--lightest--theme, light);\n}\n\n:host([pfe-color=\"accent\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--accent, #004080);\n  --pfe-card--theme: var(--pfe-theme--color--surface--accent--theme, saturated);\n}\n\n:host([pfe-color=\"complement\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--complement, #002952);\n  --pfe-card--theme: var(--pfe-theme--color--surface--complement--theme, saturated);\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, #fafafa);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, #fafafa);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #8476d1);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-saturated, underline);\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n}\n\n:host([pfe-size=\"small\"]) {\n  --pfe-card--PaddingTop: var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingRight: var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingBottom: var(--pfe-theme--container-spacer, 16px);\n  --pfe-card--PaddingLeft: var(--pfe-theme--container-spacer, 16px);\n}\n\n:host([pfe-border]:not([pfe-border=\"false\"])) {\n  --pfe-card--BorderWidth:   1px;\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]), .pfe-card__body ::slotted([pfe-overflow~=\"top\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]) {\n  z-index: 1;\n  margin-top: -2rem;\n  margin-top: calc(-1 * var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 16px) * 2))) !important;\n}\n\n:host([has_header]) .pfe-card__header ::slotted([pfe-overflow~=\"top\"]), :host([has_header]) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]), :host([has_header]) .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]) {\n  padding-top: var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"right\"]), .pfe-card__body ::slotted([pfe-overflow~=\"right\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"right\"]) {\n  margin-right: -2rem;\n  margin-right: calc(-1 * var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2)));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]), .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]) {\n  margin-bottom: -2rem;\n  margin-bottom: calc(-1 * calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2)) + var(--pfe-card--BorderRadius, var(--pfe-theme--surface--border-radius, 3px))));\n  align-self: flex-end;\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"left\"]), .pfe-card__body ::slotted([pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"left\"]) {\n  margin-left: -2rem;\n  margin-left: calc(-1 * var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2)));\n}\n\n.pfe-card__header ::slotted(img), .pfe-card__body ::slotted(img), .pfe-card__footer ::slotted(img) {\n  max-width: 100% !important;\n  align-self: flex-start;\n  object-fit: cover;\n}\n\n.pfe-card__header ::slotted(img:not[pfe-overflow]), .pfe-card__body ::slotted(img:not[pfe-overflow]), .pfe-card__footer ::slotted(img:not[pfe-overflow]) {\n  align-self: flex-start;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"]) {\n  max-width: calc(100% + 2rem) !important;\n  max-width: calc(100% + var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2))) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"left\"]) {\n  max-width: calc(100% + 2rem) !important;\n  max-width: calc(100% + var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2))) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]) {\n  max-width: calc(100% + 4rem) !important;\n  max-width: calc(100% + calc(var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2)) + var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2)))) !important;\n}\n\n.pfe-card__header {\n  z-index: 2;\n  background-color: var(--pfe-card__header--BackgroundColor, rgba(0, 0, 0, var(--pfe-theme--opacity, 0.09)));\n  color: var(--pfe-card__header--Color, var(--pfe-broadcasted--text, #3c3f42));\n  margin-top: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1) !important;\n  margin-right: calc(var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n  margin-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px)));\n  margin-left: calc(var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n  padding-top: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px)));\n  padding-right: var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 16px) * 2));\n  padding-left: var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 16px) * 2));\n  padding-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px)));\n}\n\n:host([on=\"dark\"]) .pfe-card__header {\n  background-color: var(--pfe-card__header--BackgroundColor--dark, rgba(255, 255, 255, var(--pfe-theme--opacity, 0.09)));\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  .pfe-card__header {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: var(--pfe-theme--color--text, #151515) !important;\n  }\n}\n\n:host(:not([has_body]):not([has_footer])) .pfe-card__header {\n  margin-bottom: var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n}\n\n:host(:not([has_header])) .pfe-card__header {\n  display: none;\n}\n\n:host([has_body], [has_footer]) .pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px))) * -1);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n}\n\n.pfe-card__header ::slotted(h1) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h2) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h3) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h4) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h5) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h6) {\n  margin-bottom: 0;\n}\n\n:host(:not([has_header])) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"top\"]) {\n  z-index: 1;\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px))) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n}\n\n:host([has_footer]) .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px))) * -1);\n}\n\n:host(:not([has_footer])) .pfe-card__body {\n  margin-bottom: 0;\n}\n\n.pfe-card__footer {\n  margin-top: auto;\n  display: flex;\n  flex-direction: var(--pfe-card__footer--Row, row);\n  flex-wrap: var(--pfe-card__footer--Wrap, wrap);\n  align-items: var(--pfe-card__footer--AlignItems, baseline);\n}\n\n.pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 16px) * 2)) * -1);\n}\n\n:host(:not([has_footer])) .pfe-card__footer {\n  display: none;\n}\n\n.pfe-card__header, .pfe-card__body {\n  margin-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 16px)));\n}\n\n.pfe-card__header ::slotted(p:first-child), .pfe-card__body ::slotted(p:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h1:first-child), .pfe-card__body ::slotted(h1:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h2:first-child), .pfe-card__body ::slotted(h2:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h3:first-child), .pfe-card__body ::slotted(h3:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h4:first-child), .pfe-card__body ::slotted(h4:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h5:first-child), .pfe-card__body ::slotted(h5:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h6:first-child), .pfe-card__body ::slotted(h6:first-child) {\n  margin-top: 0;\n}\n","@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: card;\n\n$LOCAL-VARIABLES: (\n  // Individual padding overrides available\n  PaddingTop: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingRight: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingBottom: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingLeft: calc(#{pfe-var(container-spacer)} * 2),\n\n  //-- Border settings\n  BorderRadius: pfe-var(surface--border-radius),\n\n  //-- Color properties\n  BackgroundColor: pfe-var(surface--base),\n  theme: pfe-var(surface--base--theme),\n  BackgroundPosition: center center,\n\n  spacing: pfe-var(container-spacer),\n\n  header: (\n    BackgroundColor: rgba(0, 0, 0, pfe-var(opacity)),\n    BackgroundColor--dark: rgba(255, 255, 255, pfe-var(opacity)),\n    Color:           pfe-broadcasted(text)\n  ),\n\n  footer: (\n    spacing--horizontal: calc(#{pfe-var(container-spacer)} / 2)\n  )\n\n);\n\n// Nested internal variables (pfe-local calls), maps cannot \"self-reference\"\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  // Internal spacing; elements inside the card (header, body, footer regions)\n  spacing--vertical: pfe-local(spacing),\n\n  // Combine above variables or allow single override point via variable\n  Padding: pfe-local(PaddingTop) pfe-local(PaddingRight) pfe-local(PaddingBottom) pfe-local(PaddingLeft),\n\n  //-- Border variable encompasses width, style, and color\n  Border: pfe-local(BorderWidth, 0) pfe-local(BorderStyle, solid) pfe-local(BorderColor, pfe-var(surface--border))\n));\n\n$size-small: (\n  PaddingTop:     pfe-var(container-spacer),\n  PaddingRight:   pfe-var(container-spacer),\n  PaddingBottom:  pfe-var(container-spacer),\n  PaddingLeft:    pfe-var(container-spacer)\n);\n\n// DEBUGGING\n// @include pfe-local-debug; // preview local variables \n\n:host {\n  --theme: #{pfe-local(theme)};\n\n  // Start of style declarations for host element\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  // This allows the card to fill it's container if necessary\n  align-self: stretch;\n\n  padding:       pfe-local(Padding);\n  border:        pfe-local(Border);  // @TODO add automatic border when lightest card is on lightest background?\n  border-radius: pfe-local(BorderRadius);\n\n  // This property ensures that children in the slots do no overflow\n  // the border-radius being set on the container\n  overflow: hidden;\n\n  // Base colors\n  background-color:    pfe-local(BackgroundColor);\n  background-position: pfe-local(BackgroundPosition);\n  color: pfe-broadcasted(text);\n\n  // Remove background color for print\n  @include pfe-no-print-background;\n\n  // Add the border to the card for print\n  @include pfe-print-media {\n    border-radius: pfe-fetch(surface--border-radius);\n    border: pfe-fetch(surface--border-width) pfe-fetch(surface--border-style) pfe-fetch(surface--border);\n  }\n\n  @include browser-query(ie11) {\n    background-color: pfe-var(surface--lightest) !important;\n    color: pfe-var(text) !important;\n    background-image: none !important;\n    border-radius: pfe-fetch(surface--border-radius);\n    border: pfe-fetch(surface--border-width) pfe-fetch(surface--border-style) pfe-fetch(surface--border);\n    padding: pfe-var(container-spacer);\n  }\n}\n\n// Pull in pfe-var settings for all supported surface colors\n@include pfe-surfaces;\n\n@include pfe-theme-contexts; // imports on=\"light\" etc support\n\n:host([pfe-size=\"small\"]) {\n  @include pfe-print-local($size-small);\n}\n\n:host([pfe-border]:not([pfe-border=\"false\"])) {\n  --pfe-#{$LOCAL}--BorderWidth:   #{pfe-fetch(surface--border-width)};\n}\n\n// Targets the wrappers in the shadow DOM\n.pfe-card {\n  &__header,\n  &__body,\n  &__footer {\n    ::slotted([pfe-overflow~=\"top\"]) {\n      z-index: 1;\n      margin-top: -2rem; //IE11 fallback\n      margin-top: calc(-1 * #{pfe-local(PaddingTop)}) !important;\n      :host([has_header]) & {\n        padding-top: #{pfe-local(spacing)};\n      }\n    }\n\n    ::slotted([pfe-overflow~=\"right\"]) {\n      margin-right: -2rem; //IE11 fallback\n      margin-right: calc(-1 * #{pfe-local(PaddingRight)});\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      margin-bottom: -2rem; //IE11 fallback\n      margin-bottom: calc(-1 * calc(#{pfe-local(PaddingBottom)} + #{pfe-local(BorderRadius)}));\n      align-self: flex-end;\n    }\n\n    ::slotted([pfe-overflow~=\"left\"]) {\n      margin-left: -2rem; //IE11 fallback\n      margin-left: calc(-1 * #{pfe-local(PaddingLeft)});\n    }\n\n    ::slotted(img) {\n      max-width: 100% !important;\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n      object-fit: cover; // Fix distortion\n    }\n\n    ::slotted(img:not[pfe-overflow]) {\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"]) {\n      max-width: calc(100% + 2rem) !important; //IE11 fallback\n      max-width: calc(100% + #{pfe-local(PaddingRight)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"left\"]) {\n      max-width: calc(100% + 2rem) !important; //IE11 fallback\n      max-width: calc(100% + #{pfe-local(PaddingLeft)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]) {\n      max-width: calc(100% + 4rem) !important; //IE11 fallback\n      max-width: calc(100% + calc(#{pfe-local(PaddingRight)} + #{pfe-local(PaddingLeft)})) !important;\n    }\n  }\n  &__header {\n    z-index: 2;\n    // Declare the header background color\n    background-color: pfe-local(BackgroundColor, $region: header);\n    color:            pfe-local($cssvar: Color, $region: header);\n    :host([on=\"dark\"]) & {\n        // Declare the header background color\n      background-color: pfe-local(BackgroundColor--dark, $region: header);\n    }\n    @include browser-query(ie11) {\n      background-color: pfe-fetch(surface--lightest) !important;\n      color: #{pfe-var(text)} !important;\n    }\n\n    // Margin styles on header region\n    margin-top:    calc(#{pfe-local(PaddingTop)} * -1) !important;\n    margin-right:  calc(#{pfe-local(PaddingRight)} * -1);\n    margin-bottom: #{pfe-local(spacing--vertical)};\n    margin-left:   calc(#{pfe-local(PaddingLeft)} * -1);\n\n    // Padding for the header region\n    padding-top:    #{pfe-local(spacing--vertical)};\n    padding-right:  #{pfe-local(PaddingRight)};\n    padding-left:   #{pfe-local(PaddingLeft)};\n    padding-bottom: #{pfe-local(spacing--vertical)};\n\n    :host(:not([has_body],[has_footer])) & {\n      margin-bottom: #{pfe-local(PaddingBottom)};\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    :host(:not([has_header])) & {\n      display: none;\n    }\n\n    :host([has_body],[has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    @each $tag in (h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}) {\n        margin-bottom: 0;\n      }\n    }\n  }\n  &__body {\n    :host(:not([has_header])) & ::slotted([pfe-overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]) {\n      z-index: 1;\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    :host([has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    :host(:not([has_footer])) & {\n      margin-bottom: 0;\n    }\n  }\n  &__footer {\n    margin-top: auto; // This allows the footer to move to the very bottom\n\n    display: flex;\n    flex-direction: #{pfe-local(Row, row, $region: footer)};\n    flex-wrap: #{pfe-local(Wrap, wrap, $region: footer)};\n    // Aligns buttons and CTAs\n    align-items: #{pfe-local(AlignItems, baseline, $region: footer)};\n\n    ::slotted([pfe-overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    :host(:not([has_footer])) & {\n      display: none;\n    }\n  }\n  &__header,\n  &__body {\n    margin-bottom: #{pfe-local(spacing--vertical)};\n\n    //-- Slotted styles for typography\n    // Remove margins from typography inside the slots\n    @each $tag in (p, h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}:first-child) {\n        // Remove top margins\n        margin-top: 0;\n      }\n    }\n  }\n}\n","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: #{pfe-broadcasted(ui-base--hover)};\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: #{pfe-broadcasted(link)};\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","$pfe-vars: (\n  container-spacer:              16px,\n  container-padding:             16px,\n  content-spacer:                24px,\n\n  font-size:                     16px,\n  line-height:                   1.5,\n\n  font-family:                   '\"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif',\n  font-family--heading:          '\"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif',\n  font-family--code:             '\"Overpass Mono\", Consolas, Monaco, 'Andale Mono', monospace',\n\n  font-size--heading--alpha:     32px,\n  font-size--heading--beta:      24px,\n  font-size--heading--gamma:     21px,\n  font-size--heading--delta:     18px,\n  font-size--heading--epsilon:   16px,\n  font-size--heading--zeta:      14px,\n\n  font-weight--light:            300,\n  font-weight--normal:           500,\n  font-weight--semi-bold:        600,\n  font-weight--bold:             700,\n\n  surface--border-width:         1px,\n  surface--border-width--heavy:  4px,\n  surface--border-style:         solid,\n  surface--border-radius:        3px,\n  surface--border-width--active: 3px,\n\n  icon-size:                     1em,\n\n  ui--element--size:             20px,\n\n  ui--border-width:              1px,\n  ui--border-width--active:      3px,\n  ui--border-style:              solid,\n  ui--border-radius:             2px,\n\n  ui--focus-outline-width:       1px,\n  ui--focus-outline-style:       solid,\n\n  link-decoration: none,\n  link-decoration--hover: underline,\n  link-decoration--focus: underline,\n  link-decoration--visited: none,\n  link-decoration--on-dark: none,\n  link-decoration--hover--on-dark: underline,\n  link-decoration--focus--on-dark: underline,\n  link-decoration--visited--on-dark: none,\n  link-decoration--on-saturated: underline,\n  link-decoration--hover--on-saturated: underline,\n  link-decoration--focus--on-saturated: underline,\n  link-decoration--visited--on-saturated: underline, \n\n  grid-breakpoint--xs:           0,\n  grid-breakpoint--sm:           576px,\n  grid-breakpoint--md:           768px,\n  grid-breakpoint--lg:           992px,\n  grid-breakpoint--xl:           1200px,\n\n  box-shadow--sm:                #{0  #{pfe-size-prem(1)}  #{pfe-size-prem(2)} 0 rgba($pf-color-black-1000, .2)},\n  box-shadow--md:                #{0  #{pfe-size-prem(2)}  #{pfe-size-prem(1)} #{pfe-size-prem(1)} rgba($pf-color-black-1000, .12), 0  #{pfe-size-prem(4)}  #{pfe-size-prem(11)} #{pfe-size-prem(6)} rgba($pf-color-black-1000, .05)},\n  box-shadow--lg:                #{0  #{pfe-size-prem(3)}  #{pfe-size-prem(7)} #{pfe-size-prem(3)} rgba($pf-color-black-1000, .13), 0  #{pfe-size-prem(11)}  #{pfe-size-prem(24)} #{pfe-size-prem(16)} rgba($pf-color-black-1000, .12)},\n  box-shadow--inset:             #{inset 0 0 #{pfe-size-prem(10)} 0 $pf-color-black-100},\n\n  animation-speed:               .3s,\n  animation-timing:              cubic-bezier(0.465, 0.183, 0.153, 0.946),\n  opacity:                       .09\n);\n","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n"]}